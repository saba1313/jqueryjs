/*
 * Ext - JS Library 1.0 Alpha 2
 * Copyright(c) 2006-2007, Jack Slocum.
 * 
 * http://www.extjs.com/license.txt
 */

Ext.form.DateField=function(_1){Ext.form.DateField.superclass.constructor.call(this,_1);if(typeof this.minValue=="string"){this.minValue=this.parseDate(this.minValue);}if(typeof this.maxValue=="string"){this.maxValue=this.parseDate(this.maxValue);}this.ddMatch=null;if(this.disabledDates){var dd=this.disabledDates;var re="(?:";for(var i=0;i<dd.length;i++){re+=dd[i];if(i!=dd.length-1){re+="|";}}this.ddMatch=new RegExp(re+")");}};Ext.extend(Ext.form.DateField,Ext.form.TextField,{defaultAutoCreate:{tag:"input",type:"text",size:"16",autocomplete:"off"},setSize:function(w,h){Ext.form.DateField.superclass.setSize.call(this,w,h);this.wrap.setWidth(w);},initEvents:function(){Ext.form.DateField.superclass.initEvents.call(this);},onRender:function(ct){Ext.form.DateField.superclass.onRender.call(this,ct);this.wrap=this.el.wrap({cls:"x-form-date-wrap"});this.trigger=this.wrap.createChild({tag:"a",href:"#",cls:"x-form-date-icon",html:"&#160;"});this.trigger.on("click",this.onTriggerClick,this,{preventDefault:true});this.wrap.setWidth(this.el.getWidth());},onFocus:function(){Ext.form.DateField.superclass.onFocus.call(this);Ext.get(document).on("mousedown",this.mimicBlur,this);},onBlur:function(){},mimicBlur:function(e,t){if(!this.wrap.contains(t)&&(!this.menu||!this.menu.isVisible())){Ext.get(document).un("mousedown",this.mimicBlur);Ext.form.DateField.superclass.onBlur.call(this);}},validateValue:function(_a){_a=this.formatDate(_a);if(!Ext.form.DateField.superclass.validateValue.call(this,_a)){return false;}if(_a.length<1){return true;}var _b=_a;_a=this.parseDate(_a);if(!_a){this.markInvalid(String.format(this.invalidText,_b,this.format));return false;}var _c=_a.getTime();if(this.minValue&&_c<this.minValue.getTime()){this.markInvalid(String.format(this.minText,this.formatDate(this.minValue)));return false;}if(this.maxValue&&_c>this.maxValue.getTime()){this.markInvalid(String.format(this.maxText,this.formatDate(this.maxValue)));return false;}if(this.disabledDays){var _d=_a.getDay();for(var i=0;i<this.disabledDays.length;i++){if(_d===this.disabledDays[i]){this.markInvalid(this.disabledDaysText);return false;}}}var _f=this.formatDate(_a);if(this.ddMatch&&this.ddMatch.test(_f)){this.markInvalid(String.format(this.disabledDatesText,_f));return false;}return true;},getValue:function(){return this.parseDate(Ext.form.DateField.superclass.getValue.call(this))||"";},setValue:function(_10){Ext.form.DateField.superclass.setValue.call(this,this.formatDate(_10));},parseDate:function(_11){return (!_11||_11 instanceof Date)?_11:Date.parseDate(_11,this.format);},formatDate:function(_12){return (!_12||!(_12 instanceof Date))?_12:_12.format(this.format);},onTriggerClick:function(){if(this.disabled){return;}if(this.menu==null){this.menu=new Ext.menu.DateMenu({minDate:this.minValue,maxDate:this.maxValue,disabledDatesRE:this.ddMatch,disabledDatesText:this.disabledDatesText,disabledDays:this.disabledDays,disabledDaysText:this.disabledDaysText,format:this.format,minText:String.format(this.minText,this.formatDate(this.minValue)),maxText:String.format(this.maxText,this.formatDate(this.maxValue))});this.menu.on({"select":function(m,d){this.setValue(d);},show:function(){this.el.addClass(this.focusClass);},hide:function(){this.focus();},scope:this});}this.menu.picker.setValue(this.getValue()||new Date());this.menu.show(this.el,"tl-bl?");},format:"m/d/y",disabledDays:null,disabledDaysText:"Disabled",disabledDates:null,disabledDatesText:"Disabled",minValue:null,maxValue:null,minText:"The date in this field must be after {0}",maxText:"The date in this field must be before {0}",invalidText:"{0} is not a valid date - it must be in the format {1}"});
