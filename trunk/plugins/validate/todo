important: support array elements!

- example showing how to validate new rows added to a table
- custom validation: totals for a number of fields may not exceed a certain value

I don’t know if it’s already a known bug, but the remote-check in this demo
http://jquery.bassistance.de/ajax-validation/demo-test/milk/
isnt working correctly:
If you input a username that begings with a invalid one (like Peterr) and the onkey-check is active,
 you just need the right timing to display the error-message for a valid username: “Peterr is already in use”.
If you now move the cursor or blur the field it becomes valid again.
 -> The request for the invalid value is sent, meanwhile the user enters another character and the message for that
    field is changed for that value
    -> The request returns and displays that overwritten message - WRONG
    
    -> Adding a sleep(1) to users.php helps a lot to reproduce the problem
    -> Moving the message-creation into the AJAX callback show the correct message, but displays it also for valid values
       -> We need the AjaxQueue plugin to cancel previous requests and display only the result for the most recent one

You can reproduce the bug as follows:
enter something in the username field
defocus it
delete it (so now the onkey-check is active)
enter “Pete” and then really quickly “rr”, you’ll see that the error message keeps displaying “Peterr is already in use”. Now move the cursor or defocus the field: Peterr is now valid ;-) 


I gave the ajax validation on http://jquery.bassistance.de/ajax-validation/demo-test/milk/ a testdrive but somehow it doesn’t work smoothly in IE6 when the required is set dependent on wether another field is filled. The form is submitted in IE anyway. In firefox it works fine. If I change the required to true than it works fine in both browsers.

- show number of errors and update on blur/keyup: ugly ugly ugly ->
  * can't use invalidHander, only called on submit
  * can't use showErrors, size() matches only the current element, not all elements
  -> need to keep track about which elements are valid and update that on both events


- rename onchange to onclick, document all those event options
- is that element == lastElement check in the onblur handler really useful?
- make it easy to validate only a subform, example implementation:


Hello. I came across the need to validate only part of a form, that is, the form elements which were currently visible on a tabbed page. I come up with this, based on validator.prototype.form():

jQuery.validator.prototype.validatePartialForm = function(parentstr) {
this.prepareForm();

var oks = $(parentstr).find(”input, select, textarea, button”); //modified line
for ( var i = 0, element; element = this.elements[i]; i++ ) {
if (oks.index(element) != -1) { //modified line
this.check(element);
}
}
jQuery.extend(this.submitted, this.errorMap);
return this.valid();
}

use it like validator.validatePartialForm(’#container1′)


- ajax: captcha validation ( http://psyrens.com/captcha/ )
- allow to ignore a default value for onblur-validation
- performance tuning: add about 100 fields to custom-method-demo and profile IE
- oninvalid/invalidSubmitHandler: called after a form is validated on submit and its invalid
- removing messages by specifying null or an empty string doesn't work as it defaults to the default message. improve that check
- animations!!
- ajax validation:
	- add hint about not-available usernames to milk demo (though thats obvious by viewing source for users.php)
	- in combination with autocomplete (mustmatch company name, fill out address details, validate required)
	- validate zip code in comparison to address, if match and state is missing, fill out state
- strong password check/integration: http://www.microsoft.com/protect/yourself/password/checker.mspx
- fix milk demo in IE6, (success) messages for radio/checkbox doesn't show up, none at all for checkbox
- add/modify onkeyup option: true - immediate, false - none

- validate on paste:

I'm going to assume that you have some validate function
"checkVal".

input.blur(checkVal);

if ($.browser.msie)
 this.onpaste= function(){setTimeout(checkVal,0);};
else if ($.browser.mozilla)
 this.addEventListener('input',checkVal,false);

- docs: update options, fix rules/messages
- custom-methods-demo.html enable summary container, currently broken, is updated too often
- stop firefox password manager to popup before validation - very very difficult

8 Sijawusz Pur Rahnama, 12:30: first of all, it would be handy to have some hideError(s) method
8 Sijawusz Pur Rahnama, 12:31: the second thing is to provide some sort of ids not constrained only to DOM tree
8 Sijawusz Pur Rahnama, 12:32: it can be achieved by sniffing some character on a front of id
8 Sijawusz Pur Rahnama, 12:32: like # for example
8 Sijawusz Pur Rahnama, 12:33: by this, we'll be able to set some custom errors not strictly related to our form
8 Sijawusz Pur Rahnama, 12:33: for example
8 Sijawusz Pur Rahnama, 12:34: validator.setErrors({ '#broken_connection': 'There was a problem with connection, try again later' });
8 Sijawusz Pur Rahnama, 12:35: and later we could use validator.hideError('#broken_connection');

 Examples:
 - wordpress comment form, make it a drop-in method
 - masked input plugin integration http://digitalbush.com/projects/masked-input-plugin -> marketo
 - ajaxForm() integration
 - ajaxSubmit with rules-option, more/less options to ajaxSubmit
 - watermark integration http://digitalbush.com/projects/watermark-input-plugin
 - custom password validation, eg. 6 chars min, and at least 1 number and at least 1 alpha or Must not use 123, abc, asdf or your username or your domain in the password, see addMethod2 test
 - datepicker integration (see dobis)
 - timepicker integration ( http://labs.perifer.se/timedatepicker/ ) 
 - milk example
 - one example for each option
 - intergration with rich-text-editors (FCKEditor, TinyMCE, Codepress)
 - integration with CakePHP ( https://trac.cakephp.org/ticket/2359 )
 
 -> In simple terms, you need to "move" the content from the TinyMCE
control to the textarea for validation.

$('button.save').click(function(){
	if (tinyMCE) tinyMCE.triggerSave();
});
http://wiki.moxiecode.com/index.php/TinyMCE:Functions#tinyMCE.triggerSave
 
http://www.fyneworks.com/jquery/FCKEditor/

Examples for specifying validation rules via special classes:

var classRules = {
    required: "required",
    requiredChecked: {
        required: "#checked:checked"
    },
    requiredMail: {
        required: true,
        email: true
    }
};

var rules = {};
$(':input').each(function() {
    var input = this;
    if ( $(input).attr("class") ) {
        $.each($(input).attr("class").split(" "), function(i, n) {
            if ( n in classRules ) {
                rules[ input.name] = classRules[n];
            }
        });
    }
});


$("form").validate({
    rules: rules
});
