<?xml version="1.0" ?><docs startdoc="UI" timestamp="2009-01-11T17:18:15Z"><cat value="UI/Draggable"><subcat value="Plugin methods"><function cat="UI/Draggable" name="draggable" return="jQuery" timestamp="2009-01-05T17:55:30Z"><desc>Creates new draggables on the nodeset supplied by the query.</desc><longdesc>This jQuery plugin makes DOM nodes draggable by mouse. You can additionally supply a great range of options to make them fit your needs.

All callbacks (start,stop,drag) receive two arguments: The original browser event and a prepared ui object, view below for a documentation of this object (if you name your second argument 'ui'):

* '''ui.options''' - options used to initialize the draggable
* '''ui.helper''' - the JQuery object representing the helper that's being dragged
* '''ui.position''' - current position of the helper as { top, left } object, relative to the offset element
* '''ui.absolutePosition''' - current absolute position of the helper as { top, left } object, relative to page
</longdesc><params name="options" type="Options"><desc>A set of key/value pairs that configure the draggable. All options are optional.</desc></params><option default="parent" name="appendTo" type="Element, Selector"><desc>For a draggable with a ''helper'' specified, the matched element passed to ''appendTo'' will be used as the helper's container. If not specified, the helper is appended to the same container as the draggable.</desc></option><option default="false" name="axis" type="String"><desc>Constrains dragging to either the horizontal (x) or vertical (y) axis. Possible values: 'x', 'y'.</desc></option><option default="':input'" name="cancel" type="Selector"><desc>Prevents dragging if you start on elements matching the selector. </desc></option><option name="containment" type="Element, Selector"><desc>Constrains dragging to within the bounds of the specified element - can be a DOM element, 'parent', 'document', 'window', or a jQuery selector.</desc></option><option default=" 'default'" name="cursor" type="String"><desc>The css cursor for the helper during the drag operation. </desc></option><option default=" false" name="connectToSortable" type="Array, Selector"><desc>An Array with comma seperated selector strings that match sortable lists, for example [&quot;div ul&quot;, &quot;ul.myclass&quot;], or alternatively a jQuery selector. The better choice is the Array, if the selection needs to be dynamic (i.e. at a later point, more/less lists match the selector). If this option is used (helper must be set to clone in order to work flawlessly), a draggable can be dragged onto a sortable list and then becomes part of it. </desc></option><option name="cursorAt" type="Object, Array"><desc>Moves the dragging element/helper so the cursor always appears to drag from the same position. Coordinates can be given as a hash using a combination of the keys ''top'', ''left'', ''right'', ''bottom''.</desc></option><option default="0" name="delay" type="Integer"><desc>Time in milliseconds to define when the dragging should start. It helps preventing unwanted drags when clicking on an element. </desc></option><option default="1" name="distance" type="Integer"><desc>Tolerance, in pixels, for when dragging should start. If specified, dragging will not start until after mouse is dragged beyond distance.</desc></option><option name="grid" type="[Integer x, Integer y]"><desc>Snaps the dragging element/helper to a grid, every x and y pixels. </desc></option><option name="handle" type="Element, Selector"><desc>Restricts drag start click to the specified element. Default value: draggable element.</desc></option><option default=" 'original'" name="helper" type="String, Function"><desc>Allows for a helper element to be used for dragging display. The 'clone' option will produce the 'ghosting' effect. Possible values: 'original', 'clone', Function. If you supply a function, it must return a valid DOM node. </desc></option><option default=" false" name="iframeFix" type="String, Boolean"><desc>Only useful in combination with cursorAt, or in any case, if the mouse cursor is not over the helper. It creates transparent overlays for all iframes on the page (if set to true, can be used to match certain iframes only if a selector is used) that are overlayed during the drag, so you can safely mouseover them without releasing the event. </desc></option><option default=" 1.0" name="opacity" type="Float"><desc>Opacity for the helper while being dragged. </desc></option><option default=" false" name="refreshPositions" type="Boolean"><desc> If set to true, all droppable positions are calculated on every mousemove. Caution: This solves issues on highly dynamic pages, but dramatically decreases performance. </desc></option><option default=" false " name="revert" type="Boolean"><desc>If set to true, the element will return to its start position when dragging stops. Also accepts the strings &quot;valid&quot; and &quot;invalid&quot;: If set to invalid, revert will only occur if the draggable has not been dropped on a droppable. For valid, it's the other way around. </desc></option><option default="500" name="revertDuration" type="Integer"><desc>The duration of the revert animation. Since version 1.6 stable.</desc></option><option default="false" name="scroll" type="Boolean"><desc>If true, container auto-scrolls while dragging. </desc></option><option default="20" name="scrollSensitivity" type="Integer"><desc>Distance in pixels from the edge of the view port after which the view port should scroll. Distance is relative to pointer, not the draggable. </desc></option><option default="20" name="scrollSpeed" type="Integer"><desc>The speed at which the window should scroll once the mouse pointer gets within the ''scrollSensitivity'' distance. </desc></option><option default="'default'" name="scope" type="String"><desc>Only useful if you have large collections of droppables. It's like an identifier that says what droppables a draggable can be dropped on. Must be set for both the draggable and the related droppables, works as addition to the droppable's accept option.  </desc></option><option default=" false" name="snap" type="Boolean,Selector"><desc> If set to a selector or to true (same as selector &quot;.ui-draggable&quot;), the new draggable will snap to the edges of the selected elements when coming to an edge of the element. </desc></option><option default=" 'both' " name="snapMode" type="&quot;inner&quot;,&quot;outer&quot;,&quot;both&quot;"><desc> If set, the dragged element will only snap to the outer edges or to the inner edges of the element. </desc></option><option default="20" name="snapTolerance" type="Integer"><desc> The distance in pixels from the snapping elements before the snapping should occur.</desc></option><option default="false" name="stack" type="Hash"><desc>Controls the z-Index of the defined group (key 'group' in the hash, accepts jQuery selector) automatically, always brings to front the dragged item. Very useful in things like window managers. Optionally, a 'min' key can be set, so the zIndex cannot go below that value.</desc></option><option name="zIndex" type="Integer"><desc>z-index for the helper while being dragged.</desc></option><option name="start" type="function(event, ui)"><desc>Function that gets called when dragging starts.</desc></option><option name="drag" type="function(event, ui)"><desc>Function that gets called when the mouse is moved during the dragging.</desc></option><option name="stop" type="function(event, ui)"><desc>Function that gets called when dragging stops.</desc></option><example><desc>Makes the div draggable.</desc><code>$(&quot;.block&quot;).draggable();</code><inhead>
  &lt;script src=&quot;http://ui.jquery.com/latest/ui/ui.core.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;http://ui.jquery.com/latest/ui/ui.draggable.js&quot;&gt;&lt;/script&gt;
</inhead><html>&lt;div class=&quot;block&quot;&gt;&lt;/div&gt;</html><css>
  .block { 
    border: 2px solid #0090DF;
    background-color: #68BFEF;
    width: 150px; 
    height: 70px;
    margin: 10px; 
  }
  </css></example><example><desc>Makes the div draggable.</desc><code>$(&quot;.block&quot;).draggable();</code><inhead>
  &lt;script src=&quot;http://ui.jquery.com/latest/ui/ui.core.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;http://ui.jquery.com/latest/ui/ui.draggable.js&quot;&gt;&lt;/script&gt;
</inhead><html>&lt;div class=&quot;block&quot;&gt;&lt;/div&gt;</html><css>
  .block { 
    border: 2px solid #0090DF;
    background-color: #68BFEF;
    width: 150px; 
    height: 70px;
    margin: 10px; 
  }
  </css></example><example><desc>Makes the div move to the top when dragged.</desc><code>$(&quot;.block&quot;).draggable({ stack: { group: '.block', min: 1 } });</code><inhead>
  &lt;script src=&quot;http://ui.jquery.com/latest/ui/ui.core.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;http://ui.jquery.com/latest/ui/ui.draggable.js&quot;&gt;&lt;/script&gt;
</inhead><html>&lt;div class=&quot;block&quot;&gt;&lt;/div&gt;&lt;div class=&quot;block&quot;&gt;&lt;/div&gt;&lt;div class=&quot;block&quot;&gt;&lt;/div&gt;</html><css>
  .block { 
    border: 2px solid #0090DF;
    background-color: #68BFEF;
    width: 50px; 
    height: 20px;
    margin: 10px; 
  }
  </css></example></function><function cat="UI/Draggable" name="draggable" return="jQuery" timestamp="2009-01-05T17:55:30Z"><desc>Temporarily disable the draggable functionality.</desc><longdesc>This method temporarily disables draggable functionality. It can later be reenabled by calling $(..).draggable(&quot;enable&quot;).</longdesc><params name="&quot;disable&quot;" type="String"><desc></desc></params><example><desc>Makes the div draggable.</desc><code>$(&quot;.block&quot;).draggable();</code><inhead>
  &lt;script src=&quot;http://ui.jquery.com/latest/ui/ui.core.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;http://ui.jquery.com/latest/ui/ui.draggable.js&quot;&gt;&lt;/script&gt;
</inhead><html>&lt;div class=&quot;block&quot;&gt;&lt;/div&gt;</html><css>
  .block { 
    border: 2px solid #0090DF;
    background-color: #68BFEF;
    width: 150px; 
    height: 70px;
    margin: 10px; 
  }
  </css></example></function><function cat="UI/Draggable" name="draggable" return="jQuery" timestamp="2009-01-05T17:55:30Z"><desc> Enable the draggable functionality.</desc><longdesc>This method re-enables a previously disabled draggable.</longdesc><params name="&quot;enable&quot;" type="String"><desc></desc></params></function><function cat="UI/Draggable" name="draggable" return="jQuery" timestamp="2009-01-05T17:55:30Z"><desc> Completely remove the draggable functionality.</desc><longdesc>This method removes the draggable functionality completely.</longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params></function></subcat></cat><cat value="UI/Droppable"><subcat value="Plugin methods"><function cat="UI/Droppable" name="droppable" return="Dropset" timestamp="2008-11-24T13:53:10Z"><desc>Creates new droppables on the nodeset supplied by the query.</desc><longdesc>This jQuery plugin makes DOM nodes droppable (meaning they accept being dropped on by draggables). You can specify which (individually) or which kind of draggables each will accept.

All callbacks receive two arguments: The original browser event and a prepared ui object, view below for a documentation of this object (if you name your second argument 'ui'):

* '''ui.options''' - options used to initialize the droppable
* '''ui.position''' - current position of the draggable helper
* '''ui.absolutePosition''' - current absolute position of the draggable helper
* '''ui.draggable''' - current draggable element
* '''ui.helper''' - current draggable helper
</longdesc><params name="options" type="Options"><desc>A set of key/value pairs that configure the droppable. All options are optional.</desc></params><option name="accept" type="Boolean function(draggable)"><desc>This function is called for each draggable on the page, to provide a custom filter. Return true if draggable should be accepted.</desc></option><option name="accept" type="String"><desc>The string should be a jQuery selector. All draggables that match the selector will be accepted.</desc></option><option name="activeClass" type="String"><desc>The class that should be added to the droppable while an acceptable draggable is being dragged.</desc></option><option name="greedy" type="Boolean"><desc>If true, will prevent event propagation on nested droppables. Default value: false.</desc></option><option name="hoverClass" type="String"><desc>The class that should be added to the droppable while being hovered by an acceptable draggable.</desc></option><option name="tolerance" type="String"><desc>Specifies which mode to use for testing whether a draggable is 'over' a droppable. Possible values: 'fit', 'intersect', 'pointer', 'touch'. Default value: 'intersect'.</desc></option><option name="activate" type="function(event, ui)"><desc>This function is called any time an accepted draggable starts dragging.</desc></option><option name="deactivate" type="function(event, ui)"><desc>This function is called any time an accepted draggable stops dragging.</desc></option><option name="over" type="function(event, ui)"><desc>This function is called as an accepted draggable is dragged 'over' (within the tolerance of) this droppable.</desc></option><option name="out" type="function(event, ui)"><desc>This function is called when an accepted draggable is dragged out (within the tolerance of) this droppable.</desc></option><option name="drop" type="function(event, ui)"><desc>This function is called when an accepted draggable is dropped 'over' (within the tolerance of) this droppable.
In the callback, $(this) represents the droppable the draggable is dropped on.
$(ui.draggable) represents the draggable.</desc></option></function><function cat="UI/Droppable" name="droppable" return="jQuery" timestamp="2008-11-24T13:53:10Z"><desc>Temporarily disable the droppable functionality.</desc><longdesc>This method temporarily disables droppable functionality. It can later be reenabled by calling $(..).droppable(&quot;enable&quot;).</longdesc><params name="&quot;disable&quot;" type="String"><desc></desc></params></function><function cat="UI/Droppable" name="droppable" return="jQuery" timestamp="2008-11-24T13:53:10Z"><desc> Enable the droppable functionality.</desc><longdesc>This method re-enables a previously disabled droppable.</longdesc><params name="&quot;enable&quot;" type="String"><desc></desc></params></function><function cat="UI/Droppable" name="droppable" return="jQuery" timestamp="2008-11-24T13:53:10Z"><desc> Completely remove the droppable functionality.</desc><longdesc>This method removes the droppable functionality completely.</longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params></function></subcat></cat><cat value="UI/Sortable"><subcat value="Plugin methods"><function cat="UI/Sortable" name="sortable" return="" timestamp="2008-12-23T14:51:18Z"><desc>Creates new sortable on the nodeset supplied by the query.</desc><longdesc>This jQuery plugin makes DOM nodes sortable by mouse. You can additionally supply a great range of options to make them fit your needs.

All callbacks receive two arguments: The original browser event and a prepared ui object, view below for a documentation of this object (if you name your second argument 'ui'):

* '''ui.position''' - current position of the helper
* '''ui.absolutePosition''' - current absolute position of the helper
* '''ui.helper''' - the current helper element (most often a clone of the item)
* '''ui.placeholder''' - the placeholder (if you defined one)
* '''ui.item''' - the current dragged element
* '''ui.sender''' - the sortable where the item comes from (only exists if you move from one connected list to another)
</longdesc><params name="options" type="Options"><desc>A set of key/value pairs that configure the sortable. All options are optional.</desc></params><option name="appendTo" type="String"><desc>Defaults to the parent, defines where the helper that moves with the mouse is being appended to during the drag (for example, to resolve overlap/zIndex issues).</desc></option><option name="axis" type="String"><desc>If defined, the items can be dragged only horizontally or vertically. Possible values:'x', 'y'</desc></option><option default="':input, button'." name="cancel" type="Selector"><desc>Prevents sorting if you start on elements matching the selector.</desc></option><option name="connectWith" type="Array"><desc>Takes an array of jQuery selectors that also have sortables applied. If used, the sortable is now connected to the other one-way, so you can drag from this sortable to the other. </desc></option><option name="containment" type="String"><desc>Constrains dragging to within the bounds of the specified element. Possible values: 'parent', 'document', jQuery String.</desc></option><option name="cursor" type="String"><desc>Defines the cursor that is being shown while sorting.</desc></option><option default="0" name="delay" type="Integer"><desc>Time in milliseconds to define when the sorting should start. It helps preventing unwanted drags when clicking on an element.</desc></option><option default="1" name="distance" type="Integer"><desc>Tolerance, in pixels, for when sorting should start. If specified, sorting will not start until after mouse is dragged beyond distance. Can be used to allow for clicks on elements within a handle.</desc></option><option default="true" name="dropOnEmpty" type="Boolean"><desc> If empty allows for an item to be dropped from a linked selectable.</desc></option><option name="handle" type="Selector, Element"><desc> See draggable options for an explanation. </desc></option><option default="false" name="forcePlaceholderSize" type="Boolean"><desc> It forces the placeholder to have a size. </desc></option><option name="grid" type="[Integer x, Integer y]"><desc>Snaps the dragging element/helper to a grid, every x and y pixels. </desc></option><option name="helper" type="Element function(event, element)"><desc>Allows for a helper element to be used for dragging display. The supplied function receives the event and the element being sorted, and should return a valid DOM node to be used as a custom proxy helper.</desc></option><option default=" '&gt; *' " name="items" type="Selector"><desc>Items to apply sorting to. </desc></option><option name="opacity" type="Float"><desc>Defines the opacity of the helper while 
sorting. From 0.01 to 1</desc></option><option name="placeholder" type="String"><desc>Class that gets applied to the otherwise white space.</desc></option><option default="true " name="revert" type="Boolean"><desc>If set to true, the item will be reverted to its new DOM position with a smooth animation.</desc></option><option default="true " name="scroll" type="Boolean"><desc>If set to true, the page scrolls when coming to an edge. </desc></option><option default="20 " name="scrollSensitivity" type="Integer"><desc> Defines how near the mouse must be to an edge to start scrolling. </desc></option><option default="20 " name="scrollSpeed" type="Integer"><desc> The speed at which the window should scroll once the mouse pointer gets within the scrollSensitivity distance. </desc></option><option default="&quot;guess&quot;" name="tolerance" type="String"><desc>This is the way the reordering behaves during drag. Default is &quot;guess&quot;, which guesses what mode to use (&quot;intersect&quot; or &quot;tolerance&quot;), in some setups, &quot;pointer&quot; is more natural.</desc></option><option name="zIndex" type="Integer"><desc>z-index for element/helper while being sorted.</desc></option><option name="start" type="function(event, ui)"><desc>Function that gets called when sorting starts.</desc></option><option name="sort" type="function(event, ui)"><desc>Function that gets called during sorting.</desc></option><option name="change" type="function(event, ui)"><desc>Function that gets called during sorting, but only when the DOM position has changed.</desc></option><option name="beforeStop" type="function(event, ui)"><desc>Function that gets called when sorting stops, but when the placeholder/helper is still available.</desc></option><option name="stop" type="function(event, ui)"><desc>Function that gets called when sorting has stopped.</desc></option><option name="update" type="function(event, ui)"><desc>Function that gets called when the user stopped sorting and the DOM position has changed.</desc></option><option name="receive" type="function(event, ui)"><desc>Function that gets called when a connected sortable list has received an item from another list.</desc></option><option name="remove" type="function(event, ui)"><desc>Function that gets called when a sortable item has been dragged out from the list and into another.</desc></option><option name="over" type="function(event, ui)"><desc>Function that gets called when a sortable item is moved into a connected list.</desc></option><option name="out" type="function(event, ui)"><desc>Function that gets called when a sortable item is moved away from a connected list.</desc></option><option name="activate" type="function(event, ui)"><desc>Function that gets called when using connected lists, every connected list on drag start receives it.</desc></option><option name="deactivate" type="function(event, ui)"><desc>Function that gets called when sorting was stopped, is propagated to all possible connected lists.</desc></option></function><function cat="UI/Sortable" name="sortable" return="jQuery" timestamp="2008-12-23T14:51:18Z"><desc>Temporarily disable the sortable functionality.</desc><longdesc>This method temporarily disables sortable functionality. It can later be reenabled by calling $(..).sortable(&quot;enable&quot;).</longdesc><params name="&quot;disable&quot;" type="String"><desc></desc></params></function><function cat="UI/Sortable" name="sortable" return="jQuery" timestamp="2008-12-23T14:51:18Z"><desc> Enable the sortable functionality.</desc><longdesc>This method re-enables a previously disabled sortable.</longdesc><params name="&quot;enable&quot;" type="String"><desc></desc></params></function><function cat="UI/Sortables" name="sortable" return="jQuery" timestamp="2008-12-23T14:51:18Z"><desc> Completely remove the sortable functionality.</desc><longdesc>This method removes the sortable functionality completely.</longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params></function><function cat="UI/Sortable" name="sortable" return="String" timestamp="2008-12-23T14:51:18Z"><desc> Serializes the sortable's item id's into a form/ajax submittable string.</desc><longdesc>Calling this method produces a hash that can be appended to any url to easily submit a new item order back to the server.

It works by default by looking at the id of each item in the format 'setname_number', and it spits out a hash like &quot;setname[]=number&amp;setname[]=number&quot;.

You can also give in a option hash as second argument to custom define how the function works. The possible options are: 'key' (replaces part1[] with whatever you want), 'attribute' (test another attribute than 'id') and 'expression' (use your own regexp).

If serialize returns an empty string, make sure the id attributes include an underscore.  They must be in the form: &quot;set_number&quot; For example, a 3 element list with id attributes foo_1, foo_5, foo_2 will serialize to foo[]=1&amp;foo[]=5&amp;foo[]=2. You can use an underscore, equal sign or hyphen to separate the set and number.  For example foo=1 or foo-1 or foo_1 all serialize to foo[]=1.
</longdesc><params name="&quot;serialize&quot;" type="String"><desc></desc></params><params name="options" type="Hash"><desc>a key/value hash defining how serialize works.</desc></params><option name="attribute" type="String"><desc>the attribute that is parsed. Default: 'id'.</desc></option><option name="expression" type="Regexp"><desc>the expression used to parse the attribute. The default expression used is &quot;(.+)[-=_](.+)&quot;.</desc></option><option name="key" type="String"><desc>The key in the url hash. If not specified, it will take the first result of the expression.</desc></option></function><function cat="UI/Sortable" name="sortable" return="String[]" timestamp="2008-12-23T14:51:18Z"><desc> Serializes the sortable's item id's into an array of string.</desc><longdesc>

If you have

&amp;lt;ul id=&quot;a_sortable&quot;&amp;gt;&lt;br&gt;
&amp;lt;li id=&quot;hello&quot;&amp;gt;Hello&amp;lt;/li&amp;gt;&lt;br&gt;
&amp;lt;li id=&quot;goodbye&quot;&amp;gt;Good bye&amp;lt;/li&amp;gt;&lt;br&gt;
&amp;lt;/ul&amp;gt;

and do

var result = $('#a_sortable').sortable('toArray');

then

result[0] will contain &quot;hello&quot; and result[1] will contain &quot;goodbye&quot;.
</longdesc><params name="&quot;toArray&quot;" type="String"><desc></desc></params></function><function cat="UI/Sortable" name="sortable" return="jQuery" timestamp="2008-12-23T14:51:18Z"><desc> Refresh the sortable items.</desc><longdesc>Custom trigger the reloading of all sortable items, causing new items to be recognized.</longdesc><params name="&quot;refresh&quot;" type="String"><desc></desc></params></function><function cat="UI/Sortable" name="sortable" return="jQuery" timestamp="2008-12-23T14:51:18Z"><desc> Refresh the cached positions of the sortables' items.</desc><longdesc>Calling this method refreshes the cached item positions of all sortables. This is usually done automatically by the script and slows down performance. Use wisely.</longdesc><params name="&quot;refreshPositions&quot;" type="String"><desc></desc></params></function></subcat></cat><cat value="UI/Selectable"><subcat value="Plugin methods"><function cat="UI/Selectable" name="selectable" return="" timestamp="2008-11-24T13:56:03Z"><desc>Creates new selectable on the nodeset supplied by the query.</desc><longdesc></longdesc><params name="options" type="Options"><desc>A set of key/value pairs that configure the selectable. All options are optional.</desc></params><option name="autoRefresh" type="Boolean"><desc>This determines whether to refresh (recalculate) the position and size of each selectee at the beginning of each select operation. If you have many many items, you may want to set this to false and call the refresh method manually. Default value: true</desc></option><option name="filter" type="Selector"><desc>The matching child elements will be made selectees (able to be selected). Default value: '*'</desc></option><option name="selected" type="function(event, ui)"><desc>This callback is fired at the end of the select operation, on each element added to the selection.</desc></option><option name="selecting" type="function(event, ui)"><desc>This callback is fired during the select operation, on each element added to the selection.</desc></option><option name="start" type="function(event, ui)"><desc>This callback is fired at the beginning of the select operation.</desc></option><option name="stop" type="function(event, ui)"><desc>This callback is fired at the end of the select operation.</desc></option><option name="unselected" type="function(event, ui)"><desc>This callback is fired at the end of the select operation, on each element removed from the selection.</desc></option><option name="unselecting" type="function(event, ui)"><desc>This callback is fired during the select operation, on each element removed from the selection.</desc></option></function><function cat="UI/Selectable" name="selectable" return="jQuery" timestamp="2008-11-24T13:56:03Z"><desc>Temporarily disable the selectable functionality.</desc><longdesc>This method temporarily disables selectable functionality. It can later be reenabled by calling $(..).selectable(&quot;enable&quot;).</longdesc><params name="&quot;disable&quot;" type="String"><desc></desc></params></function><function cat="UI/Selectable" name="selectable" return="jQuery" timestamp="2008-11-24T13:56:03Z"><desc> Enable the selectable functionality.</desc><longdesc>This method re-enables a previously disabled selectable.</longdesc><params name="&quot;enable&quot;" type="String"><desc></desc></params></function><function cat="UI/Selectable" name="selectable" return="jQuery" timestamp="2008-11-24T13:56:03Z"><desc> Refresh the position and size of each selectee element</desc><longdesc>This method can be used to manually recalculate the position and size of each selectee element. Very useful if autoRefresh is set to false.</longdesc><params name="&quot;refresh&quot;" type="String"><desc></desc></params></function><function cat="UI/Selectable" name="selectable" return="jQuery" timestamp="2008-11-24T13:56:03Z"><desc> Toggles the state of selectable functionality.</desc><longdesc>This method either enables or disables selecting based on the current state.</longdesc><params name="&quot;toggle&quot;" type="String"><desc></desc></params></function><function cat="UI/Selectable" name="selectable" return="jQuery" timestamp="2008-11-24T13:56:03Z"><desc> Completely remove the selectable functionality.</desc><longdesc>This method removes the selectable functionality completely.</longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params></function></subcat></cat><cat value="UI/Resizable"><subcat value="Plugin methods"><function cat="UI/Resizable" name="resizable" timestamp="2008-11-24T13:57:18Z"><desc>Creates new resizables on the nodeset supplied by the query.</desc><longdesc>This jQuery plugin makes DOM nodes resizable (meaning they have draggable resize handles). You can specify one or more handles as well as min and max width and height.

All callbacks (start,stop,resize) receive two arguments: The original browser event and a prepared ui object.  The ui object has the following fields:

* '''ui.helper''' - a jQuery object containing the helper element
* '''ui.originalPosition''' - {top, left} before resizing started
* '''ui.originalSize''' - {width, height} before resizing started
* '''ui.position''' - {top, left} current position
* '''ui.size''' - {width, height} current size
</longdesc><params name="options" type="Options"><desc>A set of key/value pairs that configure the resizable. All options are optional, but a resizable will not be useful without at least one handle.</desc></params><option default="false" name="animate" type="Boolean"><desc>Animates to the final size after resizing.</desc></option><option default="&quot;slow&quot;" name="animateDuration" type="Integer"><desc>Duration time for animating. Time in milliseconds or &quot;slow&quot;/&quot;normal&quot;/&quot;fast&quot;.</desc></option><option default="&quot;swing&quot;" name="animateEasing" type="String"><desc>Easing effect for animating.</desc></option><option default="false" name="alsoResize" type="Selector"><desc>Resize these elements synchronous when resizing.</desc></option><option default="false" name="aspectRatio" type="Boolean, Number"><desc>When set to true, resizing is constrained by the original aspect ratio. If an alternate ratio is desired, you can submit a number and then the aspect ratio will be constrained by height \ width. </desc></option><option default="false" name="autoHide" type="Boolean"><desc>When set to true, automatically hides the handles except when the mouse hovers over the element.</desc></option><option default="':input'" name="cancel" type="Selector"><desc>Prevents resizing if you start on elements matching the selector. </desc></option><option default="false" name="containment" type="Element, Selector"><desc>Constrains resizing to within the bounds of the specified element - can be a DOM element, 'parent', 'document' or a jQuery selector.</desc></option><option default="0" name="delay" type="Integer"><desc>Time in milliseconds to define when the dragging should start. It helps preventing unwanted drags when clicking on an element. </desc></option><option default="true" name="disableSelection" type="Boolean"><desc>When set to true, stops users from selecting handles and helpers.</desc></option><option default="1" name="distance" type="Integer"><desc>Tolerance, in pixels, for when resizing should start. If specified, resizing will not start until after mouse is moved beyond distance.</desc></option><option default="false" name="ghost" type="Boolean"><desc>When set to true, shows a substitute element when resizing.</desc></option><option default="false" name="grid" type="[Integer x, Integer y]"><desc>Snaps the resizing element to a grid size, every x and y pixels. </desc></option><option name="handles" type="{n, e, s, w, ne, se, sw, nw, all}"><desc>Each handle string (if specified) should be a jquery selector matching the child element of the resizable to use as the handle. If the handle is not a child of the resizable, you can pass in the DOM node or a valid jQuery object directly. </desc></option><option default="null" name="helper" type="String"><desc>This is the css class that will be added to a proxy element to outline the resize during the drag of the resize handle. Once the resize is complete, the original element is sized.</desc></option><option default="false" name="knobHandles" type="Boolean"><desc> Use square handlebars as resize handles, rather than the default border.</desc></option><option default="null" name="maxHeight" type="Int"><desc>This is the maximum height the resizable should be allowed to resize to.</desc></option><option default="null" name="maxWidth" type="Int"><desc>This is the maximum width the resizable should be allowed to resize to.</desc></option><option default="10" name="minHeight" type="Int"><desc>This is the minimum height the resizable should be allowed to resize to.</desc></option><option default="10" name="minWidth" type="Int"><desc>This is the minimum width the resizable should be allowed to resize to.</desc></option><option default="true" name="preserveCursor" type="Boolean"><desc> Whether shows direction cursors when resizing.</desc></option><option default="true" name="preventDefault" type="Boolean"><desc> Whether prevent Safari's default resizing function on textareas.</desc></option><option default="false" name="proportionallyResize" type="Array"><desc>Advanced option that allows other elements to get proportionally resized together with the original one. Just specify jquery string in this array or directly insert DOM nodes.</desc></option><option default="false" name="transparent" type="Boolean"><desc> Whether the element is transparent when resizing.</desc></option><option name="start" type="function(event, ui)"><desc>This function is called at the start of a resize operation.</desc></option><option name="resize" type="function(event, ui)"><desc>This function is called during the resize, on the drag of the resize handler.</desc></option><option name="stop" type="function(event, ui)"><desc>This function is called at the end of a resize operation.</desc></option></function><function cat="UI/Resizable" name="resizable" return="jQuery" timestamp="2008-11-24T13:57:18Z"><desc>Temporarily disable the resizable functionality.</desc><longdesc>This method temporarily disables resizable functionality. It can later be reenabled by calling $(..).resizable(&quot;enable&quot;).</longdesc><params name="&quot;disable&quot;" type="String"><desc></desc></params></function><function cat="UI/Resizable" name="resizable" return="jQuery" timestamp="2008-11-24T13:57:18Z"><desc> Enable the resizable functionality.</desc><longdesc>This method re-enables a previously disabled resizable.</longdesc><params name="&quot;enable&quot;" type="String"><desc></desc></params></function><function cat="UI/Resizable" name="resizable" return="jQuery" timestamp="2008-11-24T13:57:18Z"><desc> Completely remove the resizable functionality.</desc><longdesc>This method removes the resizable functionality completely.</longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params></function></subcat></cat><cat value="UI/Accordion"><subcat value="Plugin methods"><function cat="UI/Accordion" name="accordion" return="jQuery" timestamp="2009-01-10T19:48:08Z"><desc>Make the selected elements Accordion widgets.</desc><longdesc> Semantic requirements:

The markup of your accordion container needs pairs of headers and content panels, grouped by another element. By default, the header elements are anchors, assuming the following structure:

&lt;pre&gt;&amp;lt;div id=&quot;accordion&quot;&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;a href=&quot;#&quot;&amp;gt;First header&amp;lt;/a&amp;gt;
    &amp;lt;div&amp;gt;First content&amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;a href=&quot;#&quot;&amp;gt;Second header&amp;lt;/a&amp;gt;
    &amp;lt;div&amp;gt;Second content&amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/pre&gt;

If you use a different element for the header, specify the header-option with an appropiate selector, eg. header: &quot;h3&quot;. The content element must be always next to it's header.

If you have links inside the accordion content and use a-elements as headers, add a class to them and use that as the header, eg. header: &quot;a.header&quot;.

Use activate(Number) to change the active content programmatically.

A &quot;accordionchange&quot; event is triggered every time the accordion changes.
If the accordion is animated, the event will be triggered upon completion
of the animation; otherwise, it is triggered immediately.
&lt;pre&gt;$(&quot;.ui-accordion&quot;).bind(&quot;accordionchange&quot;, function(event, ui) {
  ui.options // options used to intialize this widget
  ui.newHeader // jQuery, activated header
  ui.oldHeader // jQuery, previous header
  ui.newContent // jQuery, activated content
  ui.oldContent // jQuery, previous content
});&lt;/pre&gt;
</longdesc><params name="options" optional="true" type="Options"><desc>A set of key/value pairs that configure the accordion. All options are optional.</desc></params><option default="first child" name="active" type="String, Element, jQuery, Boolean, Number"><desc>Selector for the active element. Set to false to display none at start. Needs &amp;laquo;alwaysOpen: false&amp;raquo;.</desc></option><option default="true" name="alwaysOpen" type="Boolean"><desc>Whether there must be one content element open. Allows collapsing the active section by the triggering event (click is the default).</desc></option><option default="'slide'" name="animated" type="Boolean, String"><desc>Choose your favorite animation, or disable them (set to false). In addition to the default, &quot;bounceslide&quot; and &quot;easeslide&quot; are supported (both require the easing plugin).</desc></option><option default="true" name="autoHeight" type="Boolean"><desc>If set, the highest content part is used as height reference for all other parts. Provides more consistent animations.</desc></option><option default="false" name="clearStyle" type="Boolean"><desc>If set, clears height and overflow styles after finishing animations. This enables accordions to work with dynamic content. Won't work together with autoheight.</desc></option><option default="&quot;click&quot;" name="event" type="String"><desc>The event on which to trigger the accordion.</desc></option><option default="false" name="fillSpace" type="Boolean"><desc>If set, the accordion completely fills the height of the parent element. Overrides autoheight.</desc></option><option default="a" name="header" type="String, Element, jQuery"><desc>Selector for the header element. </desc></option><option name="icons" type="Object"><desc>Icons to use for headers. Available icons are &quot;header&quot; and &quot;headerSelected&quot;</desc></option><option default="false" name="navigation" type="Boolean"><desc>If set, looks for the anchor that matches location.href and activates it. Great for href-based state-saving. Use navigationFilter to implement your own matcher.</desc></option><option name="navigationFilter" type="Function"><desc>Overwrite the default location.href-matching with your own matcher.</desc></option><option default="'selected'" name="selectedClass" type="String"><desc>Class for active header elements.</desc></option><example><height>380</height><desc>A simple jQuery UI Accordion.</desc><code>$(&quot;#example&quot;).accordion();</code><html>&lt;link rel=&quot;stylesheet&quot; href=&quot;http://ui.jquery.com/latest/themes/flora/flora.all.css&quot; type=&quot;text/css&quot; media=&quot;screen&quot; title=&quot;Flora (Default)&quot;&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ui.jquery.com/latest/ui/ui.core.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ui.jquery.com/latest/ui/ui.accordion.js&quot;&gt;&lt;/script&gt;

	&lt;ul id=&quot;example&quot; class=&quot;ui-accordion-container&quot; style=&quot;width: 250px;&quot;&gt;
		&lt;li&gt;
			&lt;a href='#' class=&quot;ui-accordion-link&quot;&gt;
				Test 1
			&lt;/a&gt;
			&lt;div&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
			&lt;/div&gt;

		&lt;/li&gt;
		&lt;li&gt;
			&lt;div class=&quot;ui-accordion-left&quot;&gt;&lt;/div&gt;
			&lt;a href='#' class=&quot;ui-accordion-link&quot;&gt;Test 2&lt;div class=&quot;ui-accordion-right&quot;&gt;&lt;/div&gt;&lt;/a&gt;
			&lt;div&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
			&lt;/div&gt;
		&lt;/li&gt;
		&lt;li&gt;
			&lt;div class=&quot;ui-accordion-left&quot;&gt;&lt;/div&gt;

			&lt;a href='#' class=&quot;ui-accordion-link&quot;&gt;Test 3&lt;div class=&quot;ui-accordion-right&quot;&gt;&lt;/div&gt;&lt;/a&gt;
			&lt;div&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
			&lt;/div&gt;
		&lt;/li&gt;
	&lt;/ul&gt;</html></example></function><function cat="UI/Accordion" name="accordion" return="jQuery" timestamp="2009-01-10T19:48:08Z"><desc>Activate a content part of the Accordion programmatically.</desc><longdesc>The index can be a zero-indexed number to match the position of the header to close or a string expression matching an element. Pass -1 to close all (only possible with alwaysOpen:false).</longdesc><params name="&quot;activate&quot;" type="String"><desc></desc></params><params name="index" type="String, Element, jQuery, Boolean, Number"><desc>An Integer specifying the zero-based index of the content to be activated or an expression specifying the element, or an element/jQuery object, or a boolean false to close all.</desc></params><example><desc>Activate the second content panel.</desc><code>$(&quot;.selector&quot;).accordion(&quot;activate&quot;, 1);</code></example><example><desc>Close all content parts of the accordion.</desc><code>$(&quot;.selector&quot;).accordion(&quot;activate&quot;, false);</code></example><example><desc>Activate the first element matching the given expression.</desc><code>$(&quot;.selector&quot;).accordion(&quot;activate&quot;, &quot;a:first&quot;);</code></example></function><function cat="UI/Accordion" name="accordion" return="jQuery" timestamp="2009-01-10T19:48:08Z"><desc>Enable the selected accordion.</desc><longdesc>Enabling an accordion reverts the change made by accordion(&quot;disable&quot;), turning the behaviour back to the usual state.</longdesc><params name="&quot;enable&quot;" type="String"><desc></desc></params><example><desc>Activate the second content of the Accordion contained in &lt;div id=&quot;accordion&quot;&gt;.</desc><code>$(&quot;.selector&quot;).accordion(&quot;enable&quot;)</code></example></function><function cat="UI/Accordion" name="accordion" return="jQuery" timestamp="2009-01-10T19:48:08Z"><desc>Disables the selected accordion.</desc><longdesc>Disabling an accordion turns off the ability to close or open anything in the accordion, it disables all interactions.

To completely remove the accordion behaviour, including visual changes, use <![CDATA[<a href='UI/Accordion/accordion#.22destroy.22'>accordion("destroy")</a>]]>.</longdesc><params name="&quot;disable&quot;" type="String"><desc></desc></params><example><desc>Activate the second content of the Accordion contained in &lt;div id=&quot;accordion&quot;&gt;.</desc><code>$(&quot;.selector&quot;).accordion(&quot;disable&quot;)</code></example></function><function cat="UI/Accordion" name="accordion" return="jQuery" timestamp="2009-01-10T19:48:08Z"><desc>Destroy the selected accordion.</desc><longdesc>Destroying the accordion completely reverts changes made by accordion), including events and styles.

To just temporily disable the behaviour of an accordion, use <![CDATA[<a href='UI/Accordion/accordion#.22disable.22'>accordion("disable")</a>]]>.</longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params><example><desc>Activate the second content of the Accordion contained in &lt;div id=&quot;accordion&quot;&gt;.</desc><code>$(&quot;.selector&quot;).accordion(&quot;disable&quot;)</code></example></function></subcat></cat><cat value="UI/Datepicker"><subcat value="Plugin methods"><function cat="UI/Datepicker" name="datepicker" return="jQuery" timestamp="2008-11-12T23:00:14Z"><desc>The method that you use to create a new date picker. Customize with plenty of options.</desc><longdesc>Attach the date picker to an input or for an inline view attach the date picker to a div or span.</longdesc><params name="options" type="Options"><desc>A set of key/value pairs that configure the date picker. All options are optional.</desc></params><option default="'Clear'" name="clearText" type="String"><desc>The text to display for the clear link. This attribute is one of the regionalisation attributes.</desc></option><option default="'Erase the current date'" name="clearStatus" type="String"><desc>The text to display in the status bar for the clear link. This attribute is one of the regionalisation attributes.</desc></option><option default="false" name="mandatory" type="Boolean"><desc>True if a date must be selected, causing the Clear link to be removed. False if the date is not required.</desc></option><option default="'Close'" name="closeText" type="String"><desc>The text to display for the close link. This attribute is one of the regionalisation attributes.</desc></option><option default="'Close without change'" name="closeStatus" type="String"><desc>The text to display in the status bar for the close link. This attribute is one of the regionalisation attributes.</desc></option><option default="true" name="closeAtTop" type="Boolean"><desc>Position the Clear/Close links at the top (true) or bottom (false).</desc></option><option default="'&lt;Prev'" name="prevText" type="String"><desc>The text to display for the previous month link. This attribute is one of the regionalisation attributes.</desc></option><option default="'Show the previous month'" name="prevStatus" type="String"><desc>The text to display in the status bar for the previous month link. This attribute is one of the regionalisation attributes.</desc></option><option default="'Next&gt;'" name="nextText" type="String"><desc>The text to display for the next month link. This attribute is one of the regionalisation attributes.</desc></option><option default="'Show the next month'" name="nextStatus" type="String"><desc>The text to display in the status bar for the next month link. This attribute is one of the regionalisation attributes.</desc></option><option default="false" name="hideIfNoPrevNext" type="Boolean"><desc>Normally the previous and next links are disabled when not applicable (see ''minDate''/''maxDate''). You can hide them altogether by setting this attribute to true.</desc></option><option default="'Today'" name="currentText" type="String"><desc>The text to display for the current day link. This attribute is one of the regionalisation attributes.</desc></option><option default="'Show the current month'" name="currentStatus" type="String"><desc>The text to display in the status bar for the current day link. This attribute is one of the regionalisation attributes.</desc></option><option default="false" name="gotoCurrent" type="Boolean"><desc>If true, the current day link moves to the currently selected date instead of today.</desc></option><option default="false" name="navigationAsDateFormat" type="Boolean"><desc>When true the ''formatDate'' function is applied to the ''prevText'', ''nextText'', and ''currentText'' values before display, allowing them to display the target month names for example.</desc></option><option default="['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']" name="monthNames" type="String[]"><desc>The list of full month names, as used in the month header on each datepicker and as requested via the ''dateFormat'' setting. This attribute is one of the regionalisation attributes.</desc></option><option default="['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']" name="monthNamesShort" type="String[]"><desc>The list of abbreviated month names, for use as requested via the ''dateFormat'' setting. This attribute is one of the regionalisation attributes.</desc></option><option default="true" name="changeMonth" type="Boolean"><desc>Allows you to change the month by selecting from a drop-down list. You can disable this feature by setting the attribute to false.</desc></option><option default="'Show a different month'" name="monthStatus" type="String"><desc>The text to display in the status bar for the month drop-down list. This attribute is one of the regionalisation attributes.</desc></option><option default="'-10:+10'" name="yearRange" type="String"><desc>Control the range of years displayed in the year drop-down: either relative to current year (-nn:+nn) or absolute (nnnn:nnnn).</desc></option><option default="true" name="changeYear" type="Boolean"><desc>Allows you to change the year by selecting from a drop-down list. You can disable this feature by setting the attribute to false.</desc></option><option default="'Show a different year'" name="yearStatus" type="String"><desc>The text to display in the status bar for the year drop-down list. This attribute is one of the regionalisation attributes.</desc></option><option default="'Wk'" name="weekHeader" type="String"><desc>The column header for the week of the year (see ''showWeeks''). This attribute is one of the regionalisation attributes.</desc></option><option default="'Week of the year'" name="weekStatus" type="String"><desc>The text to display in the status bar for the week of the year. This attribute is one of the regionalisation attributes.</desc></option><option default="['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']" name="dayNames" type="String[]"><desc>The list of long day names, starting from Sunday, for use as requested via the ''dateFormat'' setting. They also appear as popup hints when hovering over the corresponding column headings. This attribute is one of the regionalisation attributes.</desc></option><option default="['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']" name="dayNamesShort" type="String[]"><desc>The list of abbreviated day names, starting from Sunday, for use as requested via the ''dateFormat'' setting. This attribute is one of the regionalisation attributes.</desc></option><option default="['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']" name="dayNamesMin" type="String[]"><desc>The list of minimised day names, starting from Sunday, for use as column headers within the datepicker. This attribute is one of the regionalisation attributes.</desc></option><option default="0" name="firstDay" type="Number"><desc>Set the first day of the week: Sunday is 0, Monday is 1, ... This attribute is one of the regionalisation attributes.</desc></option><option default="true" name="changeFirstDay" type="Boolean"><desc>Allows you to click on the day names to have the week start on that day. You can disable this feature by setting the attribute to false.</desc></option><option default="'Set DD as first week day'" name="dayStatus" type="String"><desc>The text to display in the status bar for the day of the week links. Use 'DD' for the full name of the day, or 'D' for its short name. This attribute is one of the regionalisation attributes.</desc></option><option default="false" name="highlightWeek" type="Boolean"><desc>If true, the entire week row is highlighted when the mouse hovers over a day.</desc></option><option default="false" name="showOtherMonths" type="Boolean"><desc>Display dates in other months (non-selectable) at the start or end of the current month.</desc></option><option default="'Select DD, M d'" name="dateStatus" type="String"><desc>The text to display in the status bar for the date links. Use any of the date formatting characters (see ''dateFormat''). This attribute is one of the regionalisation attributes.</desc></option><option default="false" name="showWeeks" type="Boolean"><desc>Display the week of the year alongside each month. The column header is specified by the ''weekHeader'' setting. The week number is calculated based on the first date shown in each row in the datepicker, and so may not apply to all days in that row. The ''calculateWeek'' setting allows you to change the week of the year calculation from the default ISO 8601 implementation.</desc></option><option default="$.datepicker.iso8601Week" name="calculateWeek" type="Function"><desc>Perform the week of the year calculation. This function accepts a Date as a parameter and returns the number of the corresponding week of the year. The default implementation uses the ISO 8601 definition of a week: weeks start on a Monday and the first week of the year contains January 4. This means that up to three days from the previous year may be included in the first week of the  current year, and that up to three days from the current year may be included in the last week of the previous year.</desc></option><option default="1" name="numberOfMonths" type="Number, Number[2]"><desc>Set how many months to show at once. The value can be a straight integer, or can be a two-element array to define the number of rows and columns to display.</desc></option><option default="1" name="stepMonths" type="Number"><desc>Set how many months to move when clicking the Previous/Next links.</desc></option><option default="false" name="rangeSelect" type="Boolean"><desc>Set to true to allow the selection of a date range on the one date picker, or false to just select a single date. For a date range, the first click sets the start date and a second click sets the end date.</desc></option><option default="' - '" name="rangeSeparator" type="String"><desc>Set the text to use to separate the two dates in a date range via the ''onSelect'' function.</desc></option><option default="null" name="defaultDate" type="Date(yyyy, mm - 1, dd), Number, String"><desc>Set the date to display on first opening if the field is blank. Specify either an actual date via a Date object, or relative to today with a number (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '+1m +7d'), or null for today.</desc></option><option default="null" name="minDate" type="Date(yyyy, mm - 1, dd), Number, String"><desc>Set a minimum selectable date via a Date object, or relative to today with a number (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '-1y -1m'), or null for no limit.</desc></option><option default="null" name="maxDate" type="Date(yyyy, mm - 1, dd), Number, String"><desc>Set a maximum selectable date via a Date object, or relative to today with a number (e.g. +7) or a string of values and periods ('y' for years, 'm' for months, 'w' for weeks, 'd' for days, e.g. '+1m +1w'), or null for no limit.</desc></option><option name="dateFormat" type="String"><desc>The format for parsed and displayed dates. This attribute is one of the regionalisation attributes. For a full list of the possible formats see the <![CDATA[<a href='UI/Datepicker/%24.datepicker.formatDate'>formatDate</a>]]> function.</desc></option><option default="'+10'" name="shortYearCutoff" type="String, Number"><desc>Set the cutoff year for determining the century for a date (used in conjunction with ''dateFormat'' 'y'). If a numeric value (0-99) is provided then this value is used directly. If a string value is provided then it is converted to a number and added to the current year. Once the cutoff year is calculated, any dates entered with a year value less than or equal to it are considered to be in the current century, while those greater than it are deemed to be in the previous century.</desc></option><option default="'Select a date'" name="initStatus" type="String"><desc>The text to display in the status bar when the datepicker is first opened. This attribute is one of the regionalisation attributes.</desc></option><option default="false" name="showStatus" type="Boolean"><desc>True if a status bar should be shown within the datepicker indicating what each control does. False if no status bar is required.</desc></option><option default="this.dateStatus" name="statusForDate" type="Function"><desc>The function to call to determine the status text for a date within the datepicker. The default function uses the ''dateStatus'' value and substitutes in information from the current date.</desc></option><option default="''" name="appendText" type="String"><desc>The text to display after each date field, e.g. to show the required format.</desc></option><option default="'normal'" name="duration" type="String, Number"><desc>Control the speed at which the datepicker appears, it may be a time in milliseconds, a string representing one of the three predefined speeds (&quot;slow&quot;, &quot;normal&quot;, &quot;fast&quot;), or '' for immediately.</desc></option><option default="'focus'" name="showOn" type="String"><desc>Have the datepicker appear automatically when the field receives focus ('focus'), appear only when a button is clicked ('button'), or appear when either event takes place ('both').</desc></option><option default="'show'" name="showAnim" type="String"><desc>Set the name of the animation used to show/hide the datepicker. Use 'show' (the default), 'slideDown', 'fadeIn', or any of the show/hide [http://docs.jquery.com/UI/Effects jQuery UI effects].</desc></option><option default="{}" name="showOptions" type="Options"><desc>If using one of the jQuery UI effects for ''showAnim'', you can provide additional settings for that animation via this option.</desc></option><option default="'...'" name="buttonText" type="String"><desc>The text to display on the trigger button. Use in conjunction with ''showOn'' equal to 'button' or 'both'.</desc></option><option default="''" name="buttonImage" type="String"><desc>The URL for the popup button image. If set, button text becomes the ''alt'' value and is not directly displayed.</desc></option><option default="false" name="buttonImageOnly" type="Boolean"><desc>Set to true to place an image after the field to use as the trigger without it appearing on a button.</desc></option><option default="null" name="beforeShow" type="Function"><desc>Can be a function that takes an input field and current datepicker instance and returns a settings (anonymous) object to update the date picker with. It is called just before the datepicker is displayed.</desc></option><option default="null" name="beforeShowDay" type="Function"><desc>The function takes a date as a parameter and must return an array with [0] equal to true/false indicating whether or not this date is selectable and [1] equal to a CSS class name(s) or '' for the default presentation. It is called for each day in the datepicker before is it displayed.</desc></option><option default="''" name="altField" type="String"><desc>The jQuery selector for another field that is to be updated with the selected date from the datepicker. Use the ''altFormat'' setting below to change the format of the date within this field. Leave as blank for no alternate field.</desc></option><option default="''" name="altFormat" type="String"><desc>The ''dateFormat'' to be used for the ''altField'' above. This allows one date format to be shown to the user for selection purposes, while a different format is actually sent behind the scenes.</desc></option><option default="null" name="onSelect" type="Function"><desc>Allows you to define your own event when the datepicker is selected. The function receives the selected date(s) as text and the datepicker instance as parameters. ''this'' refers to the associated input field.</desc></option><option default="null" name="onChangeMonthYear" type="Function"><desc>Allows you to define your own event when the datepicker moves to a new month and/or year. The function receives the date of the first day of the first displayed month and the datepicker instance as parameters. ''this'' refers to the associated input field.</desc></option><option default="null" name="onClose" type="Function"><desc>Allows you to define your own event when the datepicker is closed, whether or not a date is selected. The function receives the selected date(s) as a date or array of dates and the datepicker instance as parameters. ''this'' refers to the associated input field.</desc></option><option default="false" name="isRTL" type="Boolean"><desc>True if the current language is drawn from right to left. This attribute is one of the regionalisation attributes.</desc></option><option default="true" name="constrainInput" type="Boolean"><desc>True if the input field is constrained to the current date format.</desc></option></function><function cat="UI/Datepicker" name="datepicker" return="jQuery" timestamp="2008-11-12T23:00:14Z"><desc>Change the settings for a previously attached datepicker.&lt;br&gt;Since 1.6, &quot;change&quot; has been deprecated and in its place is this method.</desc><longdesc></longdesc><params name="&quot;option&quot;" type="String"><desc></desc></params><params name="settings" type="Options"><desc>The new settings for these date pickers. These are the same as when <![CDATA[<a href='UI/Datepicker/datepicker'>attaching a datepicker</a>]]>.</desc></params></function><function cat="UI/Datepicker" name="datepicker" return="jQuery" timestamp="2008-11-12T23:00:14Z"><desc>Open a datepicker in a &quot;dialog&quot; box.</desc><longdesc></longdesc><params name="&quot;dialog&quot;" type="String"><desc></desc></params><params name="dateText" type="String"><desc>The initial date for the date picker.</desc></params><params name="onSelect" optional="true" type="Function"><desc>A callback function when a date is selected. The function receives the date text and date picker instance as parameters.</desc></params><params name="settings" optional="true" type="Options"><desc>The new settings for the date picker.</desc></params><params name="pos" optional="true" type="Number[2] or MouseEvent"><desc>The position of the top/left of the dialog as [x, y] or a MouseEvent that contains the coordinates. If not specified the dialog is centered on the screen.</desc></params></function><function cat="UI/Datepicker" name="datepicker" return="jQuery" timestamp="2008-11-12T23:00:14Z"><desc>Disable an input field and its attached date picker.</desc><longdesc></longdesc><params name="&quot;disable&quot;" type="String"><desc></desc></params></function><function cat="UI/Datepicker" name="datepicker" return="jQuery" timestamp="2008-11-12T23:00:14Z"><desc>Enable an input field and its attached date picker.</desc><longdesc></longdesc><params name="&quot;enable&quot;" type="String"><desc></desc></params></function><function cat="UI/Datepicker" name="datepicker" return="boolean" timestamp="2008-11-12T23:00:14Z"><desc>Determine whether a date picker has been disabled.</desc><longdesc>Only the first control is processed.</longdesc><params name="&quot;isDisabled&quot;" type="String"><desc></desc></params></function><function cat="UI/Datepicker" name="datepicker" return="jQuery" timestamp="2008-11-12T23:00:14Z"><desc>Close a previously opened date picker.</desc><longdesc></longdesc><params name="&quot;hide&quot;" type="String"><desc></desc></params><params name="speed" optional="true" type="String"><desc>The speed at which to close the date picker (optional).</desc></params></function><function cat="UI/Datepicker" name="datepicker" return="jQuery" timestamp="2008-11-12T23:00:14Z"><desc>Call up a previously attached date picker.</desc><longdesc>Only the first entry in the jQuery collection is processed.</longdesc><params name="&quot;show&quot;" type="String"><desc></desc></params></function><function cat="UI/Datepicker" name="datepicker" return="jQuery" timestamp="2008-11-12T23:00:14Z"><desc>Disconnect the datepicker functionality from its associated control.</desc><longdesc></longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params></function><function cat="UI/Datepicker" name="datepicker" return="Date or Date[2]" timestamp="2008-11-12T23:00:14Z"><desc>Retrieve the current date(s) for a datepicker.</desc><longdesc>Returns the current date for the datepicker attached to the first control, or an array of two dates for a range.</longdesc><params name="&quot;getDate&quot;" type="String"><desc></desc></params></function><function cat="UI/Datepicker" name="datepicker" return="jQuery" timestamp="2008-11-12T23:00:14Z"><desc>Set the current date(s) for a datepicker.</desc><longdesc>Returns the current date for the datepicker attached to the first control, or an array of two dates for a range.</longdesc><params name="&quot;setDate&quot;" type="String"><desc></desc></params><params name="date" type="Date"><desc>The new current date.</desc></params><params name="endDate" optional="true" type="Date"><desc>The new end date for a date range (optional).</desc></params></function></subcat><subcat value="Utilities"><function cat="UI/Datepicker" name="$.datepicker.setDefaults" return="Datepicker" timestamp="2008-01-24T05:52:40Z"><desc>Change the default settings for all date pickers</desc><longdesc></longdesc><params name="settings" type="Options"><desc>The new settings for all date pickers. See the <![CDATA[<a href='UI/Datepicker/datepicker'>datepicker options</a>]]>.</desc></params><example><desc>Set all date pickers to open on focus or a click on an icon.</desc><code>$.datepicker.setDefaults({
    showOn: 'both',
    buttonImageOnly: true,
    buttonImage: 'calendar.gif',
    buttonText: 'Calendar' });</code></example><example><desc>Set all date pickers to have French text.</desc><code>$.datepicker.setDefaults($.datepicker.regional['fr']);</code></example></function><function cat="UI/Datepicker" name="$.datepicker.formatDate" return="String" timestamp="2008-11-28T21:02:51Z"><desc>Format a date into a string value with a specified format.</desc><longdesc>The format can be combinations of the following:
* d  - day of month (no leading zero)
* dd - day of month (two digit)
* D  - day name short
* DD - day name long
* m  - month of year (no leading zero)
* mm - month of year (two digit)
* M  - month name short
* MM - month name long
* y  - year (two digit)
* yy - year (four digit)
* @  - Unix timestamp (also known as epoch seconds or POSIX time) in milliseconds since 01/01/1970
* '...' - literal text
* '' - single quote
* anything else - literal text
There are also a number of predefined standard date formats available from $.datepicker:
* ATOM - 'yy-mm-dd' (Same as RFC 3339/ISO 8601)
* COOKIE - 'D, dd M yy'
* ISO_8601 - 'yy-mm-dd'
* RFC_822 - 'D, d M y' (See RFC 822)
* RFC_850 - 'DD, dd-M-y' (See RFC 850)
* RFC_1036 - 'D, d M y' (See RFC 1036)
* RFC_1123 - 'D, d M yy' (See RFC 1123)
* RFC_2822 - 'D, d M yy' (See RFC 2822)
* RSS - 'D, d M y' (Same as RFC 822)
* TIMESTAMP - '@'
* W3C - 'yy-mm-dd' (Same as ISO 8601)</longdesc><params name="format" type="String"><desc>The format to use in presenting the date.</desc></params><params name="date" type="Date"><desc>The date value to be displayed.</desc></params><params name="settings" optional="true" type="Object"><desc>Additional parameters for formatting the date. All are optional and default to the datapicker defaults, which are usually standard English.&lt;br/&gt;
Attributes include:&lt;br/&gt;
&lt;i&gt;dayNamesShort&lt;/i&gt; (String[7]) - the short names for the days of the week, starting at Sunday.&lt;br/&gt;
&lt;i&gt;dayNames&lt;/i&gt; (String[7]) - the long names for the days of the week, starting at Sunday.&lt;br/&gt;
&lt;i&gt;monthNamesShort&lt;/i&gt; (String[12]) - the short names for the months of the year.&lt;br/&gt;
&lt;i&gt;monthNames&lt;/i&gt; (String[12]) - the long names for the months of the year.&lt;br/&gt;&lt;br/&gt;</desc></params><example><desc>Display the date in ISO format. Produces '2007-01-26'.</desc><code>$.datepicker.formatDate('yy-mm-dd', new Date(2007, 1 - 1, 26));</code></example><example><desc>Display the date in RSS format.</desc><code>$.datepicker.formatDate($.datepicker.RSS, new Date(2007, 1 - 1, 26));</code></example><example><desc>Display the date in expanded French format. Produces 'Samedi, Juillet 14, 2007'.</desc><code>$.datepicker.formatDate('DD, MM d, yy', new Date(2007, 7 - 1, 14), {dayNamesShort: $.datepicker.regional['fr'].dayNamesShort, dayNames: $.datepicker.regional['fr'].dayNames, monthNamesShort: $.datepicker.regional['fr'].monthNamesShort, monthNames: $.datepicker.regional['fr'].monthNames});</code></example></function><function cat="UI/Datepicker" name="$.datepicker.iso8601Week" return="Number" timestamp="2008-01-24T05:56:44Z"><desc>Determine the week of the year for a given date: 1 to 53.</desc><longdesc>This function uses the ISO 8601 definition of a week: weeks start on a Monday and the first week of the year contains January 4. This means that up to three days from the previous year may be included in the first week of the current year, and that up to three days from the current year may be included in the last week of the previous year.&lt;br/&gt;'''Since v3.1.'''</longdesc><params name="date" type="Date"><desc>The date to find the week for.</desc></params><example><desc>Find the week of the year for a date.</desc><code>$.datepicker.iso8601Week(new Date(2007, 1 - 1, 26));</code></example></function><function cat="UI/Datepicker" name="$.datepicker.parseDate" return="Date" timestamp="2008-07-27T15:02:26Z"><desc>Extract a date from a string value with a specified format.</desc><longdesc>For a full list of the possible formats see the <![CDATA[<a href='UI/Datepicker/%24.datepicker.formatDate'>formatDate</a>]]> function.
A number of exceptions may be thrown:
* 'Invalid arguments' if either ''format'' or ''value'' is null
* 'Missing number at position nn' if ''format'' indicated a numeric value that is not then found
* 'Unknown name at position nn' if ''format'' indicated day or month name that is not then found
* 'Unexpected literal at position nn' if ''format'' indicated a literal value that is not then found
* 'Invalid date' if the date is invalid, such as '31/02/2007'</longdesc><params name="format" type="String"><desc>The format to use in extracting the date.</desc></params><params name="value" type="String"><desc>The date value to be examined.</desc></params><params name="settings" optional="true" type="Object"><desc>Additional parameters for parsing the date. All are optional and default to the datepicker default, which is usually standard English.&lt;br/&gt;
Attributes include:&lt;br/&gt;
''shortYearCutoff'' (Number) - the value (0-99) beyond which years are considered to be in the previous century. Used in conjunction with the 'y' format option. Defaults to the datepicker default, which is usually 10 years in the future.&lt;br/&gt;
&lt;i&gt;dayNamesShort&lt;/i&gt; (String[7]) - the short names for the days of the week, starting at Sunday.&lt;br/&gt;
&lt;i&gt;dayNames&lt;/i&gt; (String[7]) - the long names for the days of the week, starting at Sunday&lt;br/&gt;
&lt;i&gt;monthNamesShort&lt;/i&gt; (String[12]) - the short names for the months of the year.&lt;br/&gt;
&lt;i&gt;monthNames&lt;/i&gt; (String[12]) - the long names for the months of the year.&lt;br/&gt;&lt;br/&gt;</desc></params><example><desc>Extract a date in ISO format.</desc><code>$.datepicker.parseDate('yy-mm-dd', '2007-01-26');</code></example><example><desc>Extract a date in RSS format.</desc><code>$.datepicker.parseDate($.datepicker.RSS, 'Fri, 26 Jan 07');</code></example><example><desc>Extract a date in expanded French format.</desc><code>$.datepicker.parseDate('DD, MM d, yy', 'Samedi, Juillet 14, 2007', {shortYearCutoff: 20, dayNamesShort: $.datepicker.regional['fr'].dayNamesShort, dayNames: $.datepicker.regional['fr'].dayNames, monthNamesShort: $.datepicker.regional['fr'].monthNamesShort, monthNames: $.datepicker.regional['fr'].monthNames});</code></example></function></subcat></cat><cat value="UI/Dialog"><subcat value="Plugin methods"><function cat="UI/Dialog" name="dialog" return="jQuery" timestamp="2008-11-24T14:02:11Z"><desc>Make the selected elements Dialog boxes.</desc><longdesc></longdesc><params name="options" type="Options"><desc>A set of key/value pairs that configure the dialog. All options are optional.</desc></params><option default="true" name="autoOpen" type="Boolean"><desc>When ''autoOpen'' is ''true'' the dialog will open automatically when ''dialog'' is called. If ''false'' it will stay hidden until ''.dialog(&quot;open&quot;)'' is called on it.</desc></option><option default="false" name="bgiframe" type="Boolean"><desc>When true, the bgiframe plugin will be used, to fix the issue in IE6 where select boxes show on top of other elements, regardless of zIndex. Requires including the bgiframe plugin. Future versions may not require a separate plugin.</desc></option><option name="buttons" type="Object"><desc>Specifies which buttons should be displayed on the dialog. The property key is the text of the button. The value is the callback function for when the button is clicked.  The context of the callback is the dialog element; if you need access to the button, it is available as the target of the event object.</desc></option><option name="dialogClass" type="String"><desc>The specified class name(s) will be added to the dialog, for additional theming.</desc></option><option default="true" name="draggable" type="Boolean"><desc>When ''draggable'' is ''true'' the resulting dialog will be draggable. If ''false'' the dialog will not be draggable.</desc></option><option default="200" name="height" type="Number"><desc>The height of the dialog, in pixels. </desc></option><option name="hide" type="String"><desc>The effect to be used when the dialog is closed.</desc></option><option default="" name="maxHeight" type="Number"><desc>The maximum height to which the dialog can be resized, in pixels. </desc></option><option default="" name="maxWidth" type="Number"><desc>The maximum width to which the dialog can be resized, in pixels. </desc></option><option default="100" name="minHeight" type="Number"><desc>The minimum height to which the dialog can be resized, in pixels. </desc></option><option default="150" name="minWidth" type="Number"><desc>The minimum width to which the dialog can be resized, in pixels. </desc></option><option default="false" name="modal" type="Boolean"><desc>When ''modal'' is set to ''true'' the dialog will have modal behavior; other items on the page will be disabled (i.e. cannot be interacted with). Modal dialogs create an overlay below the dialog but above other page elements. Custom style values for the overlay (e.g. changing its color or opacity) can be provided with the ''overlay'' option.</desc></option><option default="" name="overlay" type="Options"><desc>Key/value object of style properties for the overlay to display behind the dialog (but above other page elements). See <![CDATA[<a href='CSS'>CSS</a>]]> for details.</desc></option><option default="center" name="position" type="String, Array"><desc>Specifies where the dialog should be displayed. Possible values: 'center', 'left', 'right', 'top', 'bottom', or an array containing a coordinate pair (in pixel offset from top left of viewport) or the possible string values (e.g. ['right','top'] for top right corner).</desc></option><option default="true" name="resizable" type="Boolean"><desc>Specifies whether the dialog will be resizeable. Possible values: ''true'', ''false''. </desc></option><option name="show" type="String"><desc>The effect to be used when the dialog is opened.</desc></option><option default="true" name="stack" type="Boolean"><desc>Specifies whether the dialog will stack on top of other dialogs. This will cause the dialog to move to the front of other dialogs when it gains focus. </desc></option><option name="title" type="String"><desc>Specifies the title of the dialog. The title can also be specified by the title attribute on the dialog source element.</desc></option><option default="300" name="width" type="Number"><desc>The width of the dialog, in pixels. </desc></option><option name="open" type="function(event, ui)"><desc>Callback for the dialogopen event. The function gets passed two arguments in accordance with the <![CDATA[<a href='Events/triggerHandler'>triggerHandler</a>]]> interface. The data passed is the opened dialog options object.</desc></option><option name="focus" type="function(event, ui)"><desc>Callback for the dialogfocus event. The function gets passed two arguments in accordance with the <![CDATA[<a href='Events/triggerHandler'>triggerHandler</a>]]> interface. The data passed is the focused dialog options object.</desc></option><option name="dragStart" type="function(event, ui)"><desc>Callback for the beginning of the dialog being dragged.</desc></option><option name="drag" type="function(event, ui)"><desc>Callback for during the dialog being dragged.</desc></option><option name="dragStop" type="function(event, ui)"><desc>Callback for after the dialog has been dragged.</desc></option><option name="resizeStart" type="function(event, ui)"><desc>Callback for the beginning of the dialog being resized.</desc></option><option name="resize" type="function(event, ui)"><desc>Callback for during the dialog being resized.</desc></option><option name="resizeStop" type="function(event, ui)"><desc>Callback for after the dialog has been resize.</desc></option><option name="close" type="function(event, ui)"><desc>Callback for the close.dialog event. The function gets passed two arguments in accordance with the <![CDATA[<a href='Events/triggerHandler'>triggerHandler</a>]]> interface. The data passed is the closed dialog options object.</desc></option></function><function cat="UI/Dialog" name="dialog" return="jQuery" timestamp="2008-11-24T14:02:11Z"><desc>Opens the specified dialog boxes.</desc><longdesc></longdesc><params name="&quot;open&quot;" type="String"><desc></desc></params></function><function cat="UI/Dialog" name="dialog" return="Boolean" timestamp="2008-11-24T14:02:11Z"><desc>Return if the dialog is currently open.</desc><longdesc>Since version 1.6 stable.</longdesc><params name="&quot;isOpen&quot;" type="String"><desc></desc></params></function><function cat="UI/Dialog" name="dialog" return="jQuery" timestamp="2008-11-24T14:02:11Z"><desc>Moves the specified dialog on top of the dialogs stack.</desc><longdesc></longdesc><params name="&quot;moveToTop&quot;" type="String"><desc></desc></params></function><function cat="UI/Dialog" name="dialog" return="jQuery" timestamp="2008-11-24T14:02:11Z"><desc>Closes the specified dialog boxes.</desc><longdesc></longdesc><params name="&quot;close&quot;" type="String"><desc></desc></params></function><function cat="UI/Dialog" name="dialog" return="jQuery" timestamp="2008-11-24T14:02:11Z"><desc> Completely remove the dialog.</desc><longdesc>This method removes the dialog completely. Note however that it does ''not'' remove the contents of the dialog. To do that, use X.dialog('destroy').remove().</longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params></function></subcat></cat><cat value="UI/Progressbar"><subcat value="Plugin methods"><function cat="UI/Progressbar" name="progressbar" return="jQuery" timestamp="2008-11-24T14:03:02Z"><desc>Make the selected elements progressbar.</desc><longdesc></longdesc><params name="options" optional="true" type="Options"><desc>A set of key/value pairs that configure the progressbar. All options are optional.</desc></params><option default="1000" name="duration" type="Number"><desc>Time for progressing. </desc></option><option default="1" name="increment" type="Number"><desc>Min stepping of the progressbar. </desc></option><option default="100" name="interval" type="Number"><desc>......</desc></option><option default="true" name="range" type="Boolean"><desc>Whether show range number as text on the bar.</desc></option><option default="" name="text" type="String"><desc>Text to show on the bar.</desc></option><option default="" name="textClass" type="String"><desc>Text CSS class.</desc></option><option default="300" name="width" type="Number"><desc>Width of the progressbar</desc></option><option default="" name="start" type="function(event, ui)"><desc>Callback function triggered when the progressbar is started. </desc></option><option default="" name="pause" type="function(event, ui)"><desc>Callback function triggered when the progressbar is paused. </desc></option><option default="" name="progress" type="function(event, ui)"><desc>Callback function triggered when the progressbar is progressing. </desc></option><option default="" name="stop" type="function(event, ui)"><desc>Callback function triggered when the progressbar is stopped. </desc></option></function><function cat="UI/Progressbar" name="progressbar" return="jQuery" timestamp="2008-11-24T14:03:02Z"><desc> Start the progressbar.</desc><longdesc>This method start the progressbar.</longdesc><params name="&quot;start&quot;" type="String"><desc></desc></params></function><function cat="UI/Progressbar" name="progressbar" return="jQuery" timestamp="2008-11-24T14:03:02Z"><desc> Stop the progressbar.</desc><longdesc>This method stop the progressbar.</longdesc><params name="&quot;stop&quot;" type="String"><desc></desc></params></function><function cat="UI/Progressbar" name="progressbar" return="jQuery" timestamp="2008-11-24T14:03:02Z"><desc> Pause the progressbar.</desc><longdesc>This method pause the progressbar.</longdesc><params name="&quot;pause&quot;" type="String"><desc></desc></params></function><function cat="UI/Progressbar" name="progressbar" return="jQuery" timestamp="2008-11-24T14:03:02Z"><desc> Set range of the progressbar.</desc><longdesc>This method set range of the progressbar.</longdesc><params name="&quot;progress&quot;" type="String"><desc></desc></params><params name="value" type="Number"><desc></desc></params></function><function cat="UI/Progressbar" name="progressbar" return="jQuery" timestamp="2008-11-24T14:03:02Z"><desc> Enable the progressbar.</desc><longdesc>This method enable the progressbar.</longdesc><params name="&quot;enable&quot;" type="String"><desc></desc></params></function><function cat="UI/Progressbar" name="progressbar" return="jQuery" timestamp="2008-11-24T14:03:02Z"><desc> Disable the progressbar.</desc><longdesc>This method disable the progressbar.</longdesc><params name="&quot;disable&quot;" type="String"><desc></desc></params></function><function cat="UI/Progressbar" name="progressbar" return="jQuery" timestamp="2008-11-24T14:03:02Z"><desc> Completely remove the progressbar.</desc><longdesc>This method removes the progressbar completely.</longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params></function></subcat></cat><cat value="UI/Slider"><subcat value="Plugin methods"><function cat="UI/Slider" name="slider" timestamp="2008-11-24T14:04:01Z"><desc>Makes a slider from the nodeset supplied by the query.</desc><longdesc>With this plugin, you can generate sliders with a wide range of options, including multiple handles, callbacks and more.  Some options will not work correctly unless your external and internal stylesheets come '''before''' the script tags.

All callbacks receive two arguments: The original browser event and a prepared ui object, view below for a documentation of this object (if you name your second argument 'ui'):

* '''ui.handle''': jQuery - the current focused handle
* '''ui.value''': Integer - the current handle's value
* '''ui.range''': Integer - the current range value (only with two handles and range: true)</longdesc><params name="options" type="Options"><desc>A set of key/value pairs that configure the slider. All options are optional, but a slider will not be useful without at least one callback.</desc></params><option default="false" name="animate" type="Boolean"><desc> Whether slide handle smoothly when user click outside handle on the bar.</desc></option><option name="axis" type="String"><desc> Normally you don't need to set this option because the plugin detects the slider orientation automatically. If the orientation is not correctly detected you can set this option to 'horizontal' or 'vertical'.</desc></option><option default="&quot;.ui-slider-handle&quot;" name="handle" type="String"><desc> The jquery selector to use for the handle(s) of the slider </desc></option><option name="handles" type="Object"><desc>Specify boundaries for one or more handles. Format: [{start:Integer, min:Integer, max:Integer, id:String} [, ..]]. Only start is required. If the slider doesn't have handles already, they are automatically created.</desc></option><option default="100" name="max" type="Integer"><desc> The maximum value of the slider. Useful for tracking values via callback, and to set steps.</desc></option><option default="0" name="min" type="Integer"><desc> The minimum value of the slider. Useful for tracking values via callback, and to set steps.</desc></option><option default="false" name="range" type="Boolean"><desc> If set to true, the slider will detect if you have two handles and create a stylable range element between these two. You now also have access to ui.range in your callbacks to get the amount of the range.</desc></option><option name="startValue" type="Integer"><desc> The value the handle will have first.</desc></option><option name="stepping" type="Integer"><desc> If defined, the new value has to be dividable through this number, so the slider jumps from step to step.</desc></option><option default="0" name="steps" type="Integer"><desc> Alternative to stepping, this defines how many steps a slider will have, instead of how many values to jump, as in stepping.</desc></option><option name="start" type="function(event, ui)"><desc>Function that gets called when the user starts sliding.</desc></option><option name="slide" type="function(event, ui)"><desc> Function that gets called on every mouse move during slide.  Takes arguments e and ui, for event and user-interface respectively. Use ui.value (single-handled sliders) to obtain the value of the current handle, $(..).slider('value', index) to get another handles' value.</desc></option><option name="change" type="function(event, ui)"><desc> Function that gets called on slide stop, but only if the slider position has changed.  Takes arguments e and ui, for event and user-interface respectively.  Use ui.value (single-handled sliders) to obtain the value of the current handle, $(..).slider('value', index) to get another handles' value.</desc></option><option name="stop" type="function(event, ui)"><desc>Function that gets called when the user stops sliding.</desc></option></function><function cat="UI/Slider" name="slider" return="jQuery" timestamp="2008-11-24T14:04:01Z"><desc>Moves a slider's handle to the given position.</desc><longdesc>Calling this method moves the specified handle to the given value. If no handle or handle's index/number is specified as second argument, it moves the focused handle.

If you want to increase/decrease the handles' value, you can also input a relative string format, using &quot;+=&quot; or &quot;-=&quot;. Example: $(..).slider(&quot;moveTo&quot;, &quot;-=10&quot;) (Decrements the current handles' value by 10). 

Note also that when using a slider with range: true set in the options, move the second slider handle first as if the first handle is forced to overtake the second, you'll get strange results with minus numbers.</longdesc><params name="&quot;moveTo&quot;" type="String"><desc></desc></params><params name="value" type="Integer/String"><desc>The value to move the handle to.</desc></params><params name="index" type="Integer/Element"><desc>The index/number of the handle, zero-based (or alternatively the handle element itself).</desc></params></function><function cat="UI/Slider" name="slider" return="jQuery" timestamp="2008-11-24T14:04:01Z"><desc>Retrieves a handle's value.</desc><longdesc>This method returns a handle's value. If no handle is specified in the second argument by its index, it returns the value of the currently focused handle.</longdesc><params name="&quot;value&quot;" type="String"><desc></desc></params><params name="index" type="Integer"><desc>The index/number of the handle, zero-based.</desc></params></function><function cat="UI/Slider" name="slider" return="jQuery" timestamp="2008-11-24T14:04:01Z"><desc>Temporarily disables the slider.</desc><longdesc>This method temporarily disables the slider. It can later be reenabled by calling $(..).slider(&quot;enable&quot;).</longdesc><params name="&quot;disable&quot;" type="String"><desc></desc></params></function><function cat="UI/Slider" name="slider" return="jQuery" timestamp="2008-11-24T14:04:01Z"><desc> Enables the slider.</desc><longdesc>This method re-enables a previously disabled slider.</longdesc><params name="&quot;enable&quot;" type="String"><desc></desc></params></function><function cat="UI/Slider" name="slider" return="jQuery" timestamp="2008-11-24T14:04:01Z"><desc> Completely removes the sliding functionality.</desc><longdesc>This method removes the sliding functionality completely.</longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params></function></subcat></cat><cat value="UI/Tabs"><subcat value="Plugin methods"><function cat="UI/Tabs" name="tabs" return="jQuery" timestamp="2008-12-24T17:07:11Z"><desc>The method that you use to create a new tabs interface.</desc><longdesc></longdesc><params name="options" optional="true" type="Options"><desc>A set of key/value pairs that configures the tabs interface. All options are optional.</desc></params><option default="0" name="selected" type="Number"><desc>Zero-based index of the tab to be selected on initialization. To set all tabs to unselected set this option to null.</desc></option><option default="false" name="unselect" type="Boolean"><desc>Allows a currently selected tab to become unselected upon clicking.</desc></option><option default="click" name="event" type="String"><desc>The type of event to be used for selecting a tab.</desc></option><option default="[]" name="disabled" type="Array&lt;Number&gt;"><desc>An array containing the position of the tabs (zero-based index) that should be disabled on initialization.</desc></option><option name="cookie" type="Object"><desc>Store the latest active (clicked) tab in a cookie. The cookie is used to determine the active tab on the next page load. Requires cookie plugin. The object needs to have key/value pairs of the form the cookie plugin expects as options. Available options: &amp;#123; expires: 7, path: '/', domain: 'jquery.com', secure: true &amp;#125;</desc></option><option default="Loading&amp;amp;#8230;" name="spinner" type="String"><desc>The HTML content of this string is shown in a tab title while remote content is loading. Pass in empty string to deactivate that behavior.</desc></option><option default="false" name="cache" type="Boolean"><desc>Wether or not to cache remote tabs content, e.g. load only once or with every click. Cached content is being lazy loaded, e.g once and only once for the first click. Note that to prevent the actual Ajax requests from being cached by the browser you need to provide an extra cache: false flag to ajaxOptions.</desc></option><option name="ajaxOptions" type="Options"><desc>Additional Ajax options to consider when loading tab content (see $.ajax).</desc></option><option default="ui-tabs-" name="idPrefix" type="String"><desc>If the remote tab, its anchor element that is, has no title attribute to generate an id from, an id/fragment identifier is created from this prefix and a unique id returned by $.data(el), for example &quot;ui-tabs-54&quot;.</desc></option><option name="fx" type="Options, Array&lt;Options&gt;"><desc>Enable animations for hiding and showing tab panels. The duration option can be a string representing one of the three predefined speeds (&quot;slow&quot;, &quot;normal&quot;, &quot;fast&quot;) or the duration in milliseconds to run an animation (default is &quot;normal&quot;).</desc></option><option default="&amp;lt;li&amp;gt;&amp;lt;a href&amp;#61;&quot;#&amp;#123;href&amp;#125;&quot;&amp;gt;&amp;lt;span&amp;gt;#&amp;#123;label&amp;#125;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;" name="tabTemplate" type="String"><desc>HTML template from which a new tab is created and added. The placeholders #&amp;#123;href&amp;#125; and #&amp;#123;label&amp;#125; are replaced with the url and tab label that are passed as arguments to the add method.</desc></option><option default="&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;" name="panelTemplate" type="String"><desc>HTML template from which a new tab panel is created in case of adding a tab with the add method or when creating a panel for a remote tab on the fly.</desc></option><option name="select" type="function(event,ui)"><desc>Function that gets called when clicking a tab.</desc></option><option name="load" type="function(event,ui)"><desc>Function that gets called after the content of a remote tab has been loaded.</desc></option><option name="show" type="function(event,ui)"><desc>Function that gets called when a tab is shown.</desc></option><option name="add" type="function(event,ui)"><desc>Function that gets called when a tab was added.</desc></option><option name="remove" type="function(event,ui)"><desc>Function that gets called when a tab was removed.</desc></option><option name="enable" type="function(event,ui)"><desc>Function that gets called when a tab was enabled.</desc></option><option name="disable" type="function(event,ui)"><desc>Function that gets called when a tab was disabled.</desc></option><example><height>155</height><desc>A simple jQuery UI Tabs interface.</desc><code>$(&quot;#example &gt; ul&quot;).tabs();</code><inhead>&lt;link rel=&quot;stylesheet&quot; href=&quot;http://ui.jquery.com/latest/themes/flora/flora.all.css&quot; type=&quot;text/css&quot; media=&quot;screen&quot; title=&quot;Flora (Default)&quot;&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ui.jquery.com/latest/ui/ui.core.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://ui.jquery.com/latest/ui/ui.tabs.js&quot;&gt;&lt;/script&gt;</inhead><html>
        &lt;div id=&quot;example&quot; class=&quot;flora&quot;&gt;
            &lt;ul&gt;
                &lt;li&gt;&lt;a href=&quot;#fragment-1&quot;&gt;&lt;span&gt;One&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
                &lt;li&gt;&lt;a href=&quot;#fragment-2&quot;&gt;&lt;span&gt;Two&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
                &lt;li&gt;&lt;a href=&quot;#fragment-3&quot;&gt;&lt;span&gt;Three&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
            &lt;div id=&quot;fragment-1&quot;&gt;
                &lt;p&gt;First tab is selected by default.&lt;/p&gt;
            &lt;/div&gt;
            &lt;div id=&quot;fragment-2&quot;&gt;
                Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
                Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
            &lt;/div&gt;
            &lt;div id=&quot;fragment-3&quot;&gt;
                Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
                Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
                Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
            &lt;/div&gt;
        &lt;/div&gt;</html></example></function><function cat="UI/Tabs" name="tabs" return="jQuery" timestamp="2008-12-24T17:07:11Z"><desc>Add a new tab.</desc><longdesc></longdesc><params name="&quot;add&quot;" type="String"><desc></desc></params><params name="url" type="String"><desc>Either a URL consisting of a fragment identifier only to create an in-page tab or a full url (relative or absolute, no cross-domain support) to turn the new tab into an Ajax (remote) tab.</desc></params><params name="label" type="String"><desc>The label of the tab to be added.</desc></params><params name="index" optional="true" type="Number"><desc>Zero-based position where to insert the new tab. Optional, by default a new tab is appended at the end.</desc></params><example><desc>Append a new in-page tab.</desc><code>$(&quot;.selector&quot;).tabs(&quot;add&quot;, '#fragment-identifier', 'New Tab');</code></example><example><desc>Insert a new in-page tab at the second position.</desc><code>$(&quot;.selector&quot;).tabs(&quot;add&quot;, '#fragment-identifier', 'New Tab', 1);</code></example><example><desc>Append a new remote tab.</desc><code>$(&quot;.selector&quot;).tabs(&quot;add&quot;, '/load/content/url', 'New Tab');</code></example></function><function cat="UI/Tabs" name="tabs" return="jQuery" timestamp="2008-12-24T17:07:11Z"><desc>Remove a tab.</desc><longdesc></longdesc><params name="&quot;remove&quot;" type="String"><desc></desc></params><params name="index" type="Number"><desc>Zero-based index of the tab to be removed. </desc></params><example><desc>Remove second tab.</desc><code>$(&quot;.selector&quot;).tabs(&quot;remove&quot;, 1);</code></example></function><function cat="UI/Tabs" name="tabs" return="jQuery" timestamp="2008-12-24T17:07:11Z"><desc>Enable a disabled tab.</desc><longdesc>To enable more than one tab at once reset the disabled property like: &lt;code&gt;$('#example').data('disabled.tabs', []);&lt;/code&gt;</longdesc><params name="&quot;enable&quot;" type="String"><desc></desc></params><params name="index" type="Number"><desc>Zero-based index of the tab to be enabled. </desc></params><example><desc>Enable second tab.</desc><code>$(&quot;.selector&quot;).tabs(&quot;enable&quot;, 1);</code></example></function><function cat="UI/Tabs" name="tabs" return="jQuery" timestamp="2008-12-24T17:07:11Z"><desc>Disable a tab.</desc><longdesc>The selected tab cannot be disabled. To disable more than one tab at once use: &lt;code&gt;$('#example').data('disabled.tabs', [1, 2, 3]);&lt;/code&gt;</longdesc><params name="&quot;disable&quot;" type="String"><desc></desc></params><params name="index" type="Number"><desc>Zero-based index of the tab to be disabled. </desc></params><example><desc>Disable second tab.</desc><code>$(&quot;.selector&quot;).tabs(&quot;disable&quot;, 1);</code></example></function><function cat="UI/Tabs" name="tabs" return="jQuery" timestamp="2008-12-24T17:07:11Z"><desc>Select a tab, i.e., simulate a click programmatically.</desc><longdesc></longdesc><params name="&quot;select&quot;" type="String"><desc></desc></params><params name="index" type="Number, String"><desc>Zero-based index of the tab to be selected or the id selector of the panel the tab is associated with (the tab's href fragment identifier, e.g. hash, points to the panel's id).</desc></params><example><desc>Select second tab.</desc><code>$(&quot;.selector&quot;).tabs(&quot;select&quot;, 1);</code></example><example><desc>Select tab that is associated with a panel that has the id &quot;foo&quot;.</desc><code>$(&quot;.selector&quot;).tabs(&quot;select&quot;, '#foo');</code></example></function><function cat="UI/Tabs" name="tabs" return="jQuery" timestamp="2008-12-24T17:07:11Z"><desc>Reload the content of an Ajax tab programmatically.</desc><longdesc>This method always loads the tab content from the remote location, even is cache is set to true.</longdesc><params name="&quot;load&quot;" type="String"><desc></desc></params><params name="index" type="Number"><desc>Zero-based index of the tab to be reloaded. </desc></params><example><desc>Reload second tab.</desc><code>$(&quot;.selector&quot;).tabs(&quot;load&quot;, 1);</code></example></function><function cat="UI/Tabs" name="tabs" return="jQuery" timestamp="2008-12-24T17:07:11Z"><desc>Change the url from which an Ajax (remote) tab will be loaded.</desc><longdesc>The specified URL will be used for subsequent loads. Note that you can not only change the URL for an existing remote tab with this method, but also turn an in-page tab into a remote tab.</longdesc><params name="&quot;url&quot;" type="String"><desc></desc></params><params name="index" type="Number"><desc>Zero-based index of the tab of which its URL is to be updated.</desc></params><params name="url" type="String"><desc>A URL the content of the tab is loaded from.</desc></params><example><desc>Set the URL of an Ajax tab to load content from.</desc><code>$(&quot;.selector&quot;).tabs(&quot;url&quot;, '/changed/url');</code></example></function><function cat="UI/Tabs" name="tabs" return="jQuery" timestamp="2008-12-24T17:07:11Z"><desc>Destroy tabs interface and revert HTML to the state before creating tabs.</desc><longdesc></longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params></function><function cat="UI/Tabs" name="tabs" return="Number" timestamp="2008-12-24T17:07:11Z"><desc>Retrieve the number of tabs of the first matched tab pane.</desc><longdesc></longdesc><params name="&quot;length&quot;" type="String"><desc></desc></params></function><function cat="UI/Tabs" name="tabs" return="jQuery" timestamp="2008-12-24T17:07:11Z"><desc>Set up an automatic rotation through tabs of a tab pane.</desc><longdesc>'''Part of the UI Tabs extension package.'''</longdesc><params name="&quot;rotate&quot;" type="String"><desc></desc></params><params name="ms" type="Number"><desc>Amount of time in milliseconds until the next tab in the cycle gets activated. Use 0 or null to stop the rotation.</desc></params><params name="continuing" optional="true" type="Boolean"><desc>Whether or not to continue the rotation after a tab has been selected by a user. Default: false.</desc></params><example><desc>Start rotation with an interval of 5 seconds.</desc><code>$(&quot;.selector&quot;).tabs('rotate', 5000);</code></example><example><desc>Stop rotation.</desc><code>$(&quot;.selector&quot;).tabs('rotate', null);</code></example></function></subcat></cat><cat value="UI/Spinner"><subcat value="Plugin methods"><function cat="UI/Spinner" name="spinner" return="jQuery" timestamp="2008-11-12T02:26:07Z"><desc>Creates a Spinner widget.</desc><longdesc>This jQuery widget turns input fields or DOM nodes into a spin button. Handles such as min, max and currency provided.

Callbacks (init, up, down, spin, change) accept two arguments: The original browser event and a prepared ui object.  The ui object have these fields:

* '''ui.element''' - a jQuery object containing the spinner element.
* '''ui.options''' - options used to initialize the spinner.
* '''ui.value''' - current value of the spinner.
* '''ui.add''' - add a new item to the spinner (DOM nodes only).</longdesc><params name="options" optional="true" type="Options"><desc>A set of key/value pairs that configure the spinner. All options are optional.</desc></params><option default="false" name="currency" type="Boolean, String"><desc>Accepts a currency symbol, e.g. &amp;pound;. Will also automatically format into a currency value. </desc></option><option default="0" name="decimals" type="Number"><desc>The number of decimal places displayed. </desc></option><option default="&quot;%&quot;" name="format" type="String"><desc>''printf'' style formatting with named arguments, e.g. ''%(name)'', for customising the display value. Used for DOM lists only. See ''items''. </desc></option><option default=" &quot;''&quot;" name="group" type="String"><desc>The symbol to use as a thousand separator / digital group separator. </desc></option><option default="true" name="incremental" type="Boolean"><desc>If ''incremental'' is set to ''true'' stepping delta will increase when spun incessantly. i.e. spinning jumps up a notch at set increments. </desc></option><option default="" name="items" type="Array"><desc>An Array of objects which automatically convert into DOM lists to form spinner items. Used in combination with ''format''. </desc></option><option default="" name="max" type="Number"><desc>The upper limit. </desc></option><option default="" name="min" type="Number"><desc>The lower limit. </desc></option><option default=" '.'" name="point" type="String"><desc>The symbol to use as a decimal point. </desc></option><option default="0" name="start" type="Number"><desc>The default/start position. </desc></option><option default="1" name="stepping" type="Number"><desc>The unit step size. </desc></option><option default="" name="init" type="Function"><desc>Callback triggered when the spinner initializes. </desc></option><option default="" name="up" type="Function"><desc>Callback function triggered when the spinner increments. </desc></option><option default="" name="down" type="Function"><desc>Callback function triggered when the spinner decrements. </desc></option><option default="" name="spin" type="Function"><desc>Callback function triggered when the spinner spins. </desc></option><option default="" name="change" type="Function"><desc>Callback function triggered when the value is changed. </desc></option></function><function cat="UI/Spinner" name="spinner" return="jQuery" timestamp="2008-11-12T02:26:07Z"><desc>Temporarily disables the spinner.</desc><longdesc>This method temporarily disables the spinner. It can later be reenabled by calling $(..).spinner(&quot;enable&quot;).</longdesc><params name="&quot;disable&quot;" type="String"><desc></desc></params></function><function cat="UI/Spinner" name="spinner" return="jQuery" timestamp="2008-11-12T02:26:07Z"><desc> Enables the spinner.</desc><longdesc>This method re-enables a previously disabled spinner.</longdesc><params name="&quot;enable&quot;" type="String"><desc></desc></params></function><function cat="UI/Spinner" name="spinner" return="jQuery" timestamp="2008-11-12T02:26:07Z"><desc> Completely remove the spinner.</desc><longdesc>This method removes the spinner completely.</longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params></function></subcat></cat><cat value="UI/Colorpicker"><subcat value="Plugin methods"><function cat="UI/Colorpicker" name="colorpicker" return="jQuery" timestamp="2008-08-17T08:53:25Z"><desc>Make the selected elements colorpicker.</desc><longdesc></longdesc><params name="options" optional="true" type="Options"><desc>A set of key/value pairs that configure the colorpicker. All options are optional.</desc></params><option default="Click" name="eventName" type="String"><desc>The desired event to trigger the colorpicker. </desc></option><option default="ff0000" name="color" type="String or Object"><desc>The default color. String for hex color or hash for RGB and HSB ({r:255, r:0, b:0})  </desc></option><option default="false" name="flat" type="Boolean"><desc>Whatever if the color picker is appended to the element or triggered by an event. </desc></option><option default="" name="show" type="Function"><desc>Callback function triggered when the color picker is shown. </desc></option><option default="" name="beforeShow" type="Function"><desc>Callback function triggered before the color picker is shown. </desc></option><option default="" name="change" type="Function"><desc>Callback function triggered when the color is changed. </desc></option><option default="" name="submit" type="Function"><desc>Callback function triggered when the color it is chosen.</desc></option><option default="" name="hide" type="Function"><desc>Callback function triggered when the color picker is hidden. </desc></option></function><function cat="UI/Colorpicker" name="colorpicker" return="jQuery" timestamp="2008-08-17T08:53:25Z"><desc> Set a new color.</desc><longdesc>This method set a new color.</longdesc><params name="&quot;setColor&quot;" type="String"><desc></desc></params><params name="color" type="String or Object"><desc>The 'color' argument is the same format as the option color, string for hex color or hash for RGB and HSB ({r:255, r:0, b:0}).</desc></params></function><function cat="UI/Colorpicker" name="colorpicker" return="jQuery" timestamp="2008-08-17T08:53:25Z"><desc> Completely remove the colorpicker.</desc><longdesc>This method removes the colorpicker completely.</longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params></function></subcat></cat><cat value="UI/Autocomplete"><subcat value="Plugin methods"><function cat="UI/Autocomplete" name="autocomplete" return="jQuery" timestamp="2008-10-27T21:29:28Z"><desc>Make the selected elements Autocomplete.</desc><longdesc></longdesc><params name="options" type="Options"><desc>A set of key/value pairs that configure the autocomplete. All options are optional.</desc></params><option default="" name="url" type="String"><desc>A URL pointing at a remote resource.</desc></option><option default="" name="data" type="Array"><desc>Local data as an array.</desc></option><option default="1" name="minChars" type="Number"><desc>The minimum number of characters a user has to type before the autocompleter activates.</desc></option><option default="400 for remote, 10 for local" name="delay" type="Number"><desc>The delay in milliseconds the autocompleter waits after a keystroke to activate itself.</desc></option><option default="10" name="cacheLength" type="Number"><desc>The number of backend query results to store in cache. If set to 1 (the current result), no caching will happen. Must be &gt;= 1.</desc></option><option default="true" name="matchSubset" type="Boolean"><desc>Whether or not the autocompleter can use a cache for more specific queries. This means that all matches of &quot;foot&quot; are a subset of all matches for &quot;foo&quot;. Usually this is true, and using this options decreases server load and increases performance. Only useful with cacheLength settings bigger than one, like 10.</desc></option><option default="false" name="matchCase" type="Boolean"><desc>Whether or not the comparison is case sensitive. Important only if you use caching.</desc></option><option default="false" name="matchContains" type="Boolean"><desc>Whether or not the comparison looks inside (i.e. does &quot;ba&quot; match &quot;foo bar&quot;) the search results. Important only if you use caching. Don't mix with autofill.</desc></option><option default="false" name="mustMatch" type="Boolean"><desc>If set to true, the autocompleter will only allow results that are presented by the backend. Note that illegal values result in an empty input box.</desc></option><option default="true" name="selectFirst" type="Boolean"><desc>If this is set to true, the first autocomplete value will be automatically selected on tab/return, even if it has not been handpicked by keyboard or mouse action. If there is a handpicked (highlighted) result, that result will take precedence.</desc></option><option name="extraParams" type="Object"><desc>Extra parameters for the backend. If you were to specify { bar:4 }, the autocompleter would call my_autocomplete_backend.php?q=foo&amp;bar=4 (assuming the input box contains &quot;foo&quot;). The param can be a function that is called to calculate the param before each request.</desc></option><option default="Assumes that a single row contains a single value." name="formatItem" type="Function"><desc>Provides advanced markup for an item. For each row of results, this function will be called. The returned value will be displayed inside an LI element in the results list. Autocompleter will provide 4 parameters: the results row, the position of the row in the list of results (starting at 1), the number of items in the list of results and the search term.</desc></option><option default="formatItem is used" name="formatMatch" type="Function"><desc>Use this option if you want to limit the data that autocomplete searches for matches. For example, there may be items you want displayed to the user, but don't want included in the data that's searched. Gets called with the same arguments as formatItem.</desc></option><option default="Assumes either plain data to use as result or uses the same value as provided by formatItem." name="formatResult" type="Function"><desc>Similar to formatItem, but provides the formatting for the value to be put into the input field. Again three arguments: Data, position (starting with one) and total number of data.</desc></option><option default="false" name="multiple" type="Boolean"><desc>Whether to allow more than one autocompleted-value to enter.</desc></option><option default="&quot;, &quot;" name="multipleSeparator" type="String"><desc>Separator to put between values when using multiple option.</desc></option><option default="width of the input element" name="width" type="Number"><desc>Specify a custom width for the select box.</desc></option><option default="false" name="autoFill" type="Boolean"><desc>Fill the textinput while still selecting a value, replacing the value if more is typed or something else is selected.</desc></option><option default="10" name="max" type="Number"><desc>Limit the number of items in the select box. Is also sent as a &quot;limit&quot; parameter with a remote request.</desc></option><option default="Wraps the search term in a &lt;strong&gt; element " name="highlight" type="Boolean, Function"><desc>Whether and how to highlight matches in the select box. Set to false to disable. Set to a function to customize. The function gets the value as the first argument and the search term as the second and must return the formatted value.</desc></option><option default="true " name="scroll" type="Boolean"><desc>Whether to scroll when more results than configured via scrollHeight are available.</desc></option><option default="180" name="scrollHeight" type="Number"><desc>height of scrolled autocomplete control in pixels</desc></option></function><function cat="UI/Autocomplete" name="autocomplete" return="jQuery" timestamp="2008-10-27T21:29:28Z"><desc>Handle the result of a search event.</desc><longdesc>Is executed when the user selects a value or a programmatic search event is triggered (see 'search').

You can add and remove (using unbind(&quot;result&quot;)) this event at any time.</longdesc><params name="&quot;result&quot;" type="String"><desc></desc></params><params name="handler" type="Function"><desc>The event handler, gets a default event object as first and the selected list item as second argument.</desc></params><example><desc>Bind a handler to the result event to display the selected value in a #result element.
The first argument is a generic event object, in this case with type &quot;result&quot;.
The second argument refers to the selected data, which can be a plain string value or an array or object.
The third argument is the formatted value that is inserted into the input field.</desc><code>$('input#suggest').autocomplete(&quot;result&quot;,function(event, data, formatted) {
  $(&quot;#result&quot;).html( !data ? &quot;No match!&quot; : &quot;Selected: &quot; + formatted);
 });</code></example></function><function cat="UI/Autocomplete" name="autocomplete" return="jQuery" timestamp="2008-10-27T21:29:28Z"><desc>Trigger a search event.</desc><longdesc>See 'result' for binding to that event.

A search event mimics the same behaviour as when the user selects a value from
the list of autocomplete items. You can use it to execute anything that does something
with the selected value, beyond simply putting the value into the input and submitting it.</longdesc><params name="&quot;search&quot;" type="String"><desc></desc></params></function><function cat="UI/Autocomplete" name="autocomplete" return="jQuery" timestamp="2008-10-27T21:29:28Z"><desc>Flush (empty) the cache of matched input's autocompleters.</desc><longdesc></longdesc><params name="&quot;flushCache&quot;" type="String"><desc></desc></params></function><function cat="UI/Autocomplete" name="autocomplete" return="jQuery" timestamp="2008-10-27T21:29:28Z"><desc>Updates the options for the current autocomplete field.</desc><longdesc>This allows you to change things like the URL, max items to display, etc.
If you're changing the URL, be sure to call the 'flushCache' method.</longdesc><params name="&quot;setData&quot;" type="String"><desc></desc></params><params name="options" type="Options"><desc>The options to set.</desc></params></function><function cat="UI/Autocomplete" name="autocomplete" return="jQuery" timestamp="2008-10-27T21:29:28Z"><desc> Completely remove the autocomplete.</desc><longdesc>This method removes the autocomplete completely.</longdesc><params name="&quot;destroy&quot;" type="String"><desc></desc></params></function></subcat></cat><cat value="UI/Theming/API"/></docs>
